{"ast":null,"code":"/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.chat_content', null, global);\ngoog.exportSymbol('proto.events', null, global);\ngoog.exportSymbol('proto.ws_msg_base', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.ws_msg_base = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ws_msg_base, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.ws_msg_base.displayName = 'proto.ws_msg_base';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ws_msg_base.prototype.toObject = function (opt_includeInstance) {\n    return proto.ws_msg_base.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ws_msg_base} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ws_msg_base.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      event: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      data: msg.getData_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ws_msg_base}\n */\n\n\nproto.ws_msg_base.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ws_msg_base();\n  return proto.ws_msg_base.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ws_msg_base} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ws_msg_base}\n */\n\n\nproto.ws_msg_base.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.events} */\n        reader.readEnum();\n        msg.setEvent(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setData(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ws_msg_base.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ws_msg_base.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ws_msg_base} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ws_msg_base.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEvent();\n\n  if (f !== 0.0) {\n    writer.writeEnum(1, f);\n  }\n\n  f = message.getData_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional events event = 1;\n * @return {!proto.events}\n */\n\n\nproto.ws_msg_base.prototype.getEvent = function () {\n  return (\n    /** @type {!proto.events} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {!proto.events} value */\n\n\nproto.ws_msg_base.prototype.setEvent = function (value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n/**\n * optional bytes data = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.ws_msg_base.prototype.getData = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.ws_msg_base.prototype.getData_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getData())\n  );\n};\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.ws_msg_base.prototype.getData_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getData())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.ws_msg_base.prototype.setData = function (value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.chat_content = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.chat_content, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.chat_content.displayName = 'proto.chat_content';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat_content.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat_content.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat_content} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.chat_content.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      msg: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      timeString: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      timer: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat_content}\n */\n\n\nproto.chat_content.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat_content();\n  return proto.chat_content.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat_content} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat_content}\n */\n\n\nproto.chat_content.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMsg(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTimeString(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setTimer(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.chat_content.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat_content.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat_content} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.chat_content.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMsg();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getTimeString();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getTimer();\n\n  if (f !== 0) {\n    writer.writeInt32(3, f);\n  }\n};\n/**\n * optional string msg = 1;\n * @return {string}\n */\n\n\nproto.chat_content.prototype.getMsg = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.chat_content.prototype.setMsg = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string time_string = 2;\n * @return {string}\n */\n\n\nproto.chat_content.prototype.getTimeString = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.chat_content.prototype.setTimeString = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional int32 timer = 3;\n * @return {number}\n */\n\n\nproto.chat_content.prototype.getTimer = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.chat_content.prototype.setTimer = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * @enum {number}\n */\n\n\nproto.events = {\n  CHAT_CONTENT: 0,\n  CHAT_RECORDS: 1\n};\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/Users/justin/Desktop/my/client-pc/proto/ws_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","ws_msg_base","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","event","getFieldWithDefault","data","getData_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readEnum","setEvent","readBytes","setData","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getEvent","writeEnum","getData_asU8","length","writeBytes","setProto3EnumField","getData","bytesAsB64","bytesAsU8","setProto3BytesField","chat_content","timeString","timer","readString","setMsg","setTimeString","readInt32","setTimer","getMsg","writeString","getTimeString","getTimer","writeInt32","setProto3StringField","setProto3IntField","events","CHAT_CONTENT","CHAT_RECORDS","object","extend","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.chat_content', null, global);\ngoog.exportSymbol('proto.events', null, global);\ngoog.exportSymbol('proto.ws_msg_base', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ws_msg_base = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ws_msg_base, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.ws_msg_base.displayName = 'proto.ws_msg_base';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ws_msg_base.prototype.toObject = function(opt_includeInstance) {\n  return proto.ws_msg_base.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ws_msg_base} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ws_msg_base.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    event: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    data: msg.getData_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ws_msg_base}\n */\nproto.ws_msg_base.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ws_msg_base;\n  return proto.ws_msg_base.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ws_msg_base} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ws_msg_base}\n */\nproto.ws_msg_base.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.events} */ (reader.readEnum());\n      msg.setEvent(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ws_msg_base.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ws_msg_base.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ws_msg_base} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ws_msg_base.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEvent();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional events event = 1;\n * @return {!proto.events}\n */\nproto.ws_msg_base.prototype.getEvent = function() {\n  return /** @type {!proto.events} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.events} value */\nproto.ws_msg_base.prototype.setEvent = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional bytes data = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.ws_msg_base.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.ws_msg_base.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.ws_msg_base.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.ws_msg_base.prototype.setData = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat_content = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat_content, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.chat_content.displayName = 'proto.chat_content';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat_content.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat_content.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat_content} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat_content.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    msg: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    timeString: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    timer: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat_content}\n */\nproto.chat_content.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat_content;\n  return proto.chat_content.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat_content} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat_content}\n */\nproto.chat_content.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTimeString(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTimer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat_content.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat_content.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat_content} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat_content.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTimeString();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getTimer();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string msg = 1;\n * @return {string}\n */\nproto.chat_content.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.chat_content.prototype.setMsg = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string time_string = 2;\n * @return {string}\n */\nproto.chat_content.prototype.getTimeString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.chat_content.prototype.setTimeString = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int32 timer = 3;\n * @return {number}\n */\nproto.chat_content.prototype.getTimer = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.chat_content.prototype.setTimer = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.events = {\n  CHAT_CONTENT: 0,\n  CHAT_RECORDS: 1\n};\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"module"}