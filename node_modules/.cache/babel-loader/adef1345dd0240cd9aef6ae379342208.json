{"ast":null,"code":"/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.blog_chat_record', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.blog_chat_record = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.blog_chat_record, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.blog_chat_record.displayName = 'proto.blog_chat_record';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.blog_chat_record.prototype.toObject = function (opt_includeInstance) {\n    return proto.blog_chat_record.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.blog_chat_record} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.blog_chat_record.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      room: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      content: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      createTime: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      updateTime: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blog_chat_record}\n */\n\n\nproto.blog_chat_record.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blog_chat_record();\n  return proto.blog_chat_record.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blog_chat_record} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blog_chat_record}\n */\n\n\nproto.blog_chat_record.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRoom(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setContent(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreateTime(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdateTime(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.blog_chat_record.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.blog_chat_record.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blog_chat_record} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.blog_chat_record.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getRoom();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getContent();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getCreateTime();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getUpdateTime();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.blog_chat_record.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blog_chat_record.prototype.setId = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string room = 2;\n * @return {string}\n */\n\n\nproto.blog_chat_record.prototype.getRoom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.blog_chat_record.prototype.setRoom = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string content = 3;\n * @return {string}\n */\n\n\nproto.blog_chat_record.prototype.getContent = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.blog_chat_record.prototype.setContent = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string create_time = 4;\n * @return {string}\n */\n\n\nproto.blog_chat_record.prototype.getCreateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.blog_chat_record.prototype.setCreateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string update_time = 5;\n * @return {string}\n */\n\n\nproto.blog_chat_record.prototype.getUpdateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.blog_chat_record.prototype.setUpdateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\ngoog.object.extend(exports, proto);","map":null,"metadata":{},"sourceType":"module"}