{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { apiHost } from '../utils/config';\nimport readStream from '../utils/util';\nimport protobuf from \"../proto/resp_pb\";\nimport blobComment from \"../proto/blogComment_pb\";\nimport e from \"../proto/errors_pb\";\nexport var GetBlogList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(tp, name) {\n    var res, data, message;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(apiHost, \"/v1/client/blog/list?tp=\").concat(tp, \"&name=\").concat(name), {\n              responseType: 'blob'\n            });\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return readStream(res.data);\n\n          case 5:\n            data = _context.sent;\n            message = protobuf.blog_list.deserializeBinary(data);\n            data = message.toObject();\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function GetBlogList(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var GetBlogDetail =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(id) {\n    var meDetail, medata, meMessage;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"\".concat(apiHost, \"/v1/client/blog/detail?id=\").concat(id), {\n              responseType: 'blob'\n            });\n\n          case 2:\n            meDetail = _context2.sent;\n            _context2.next = 5;\n            return readStream(meDetail.data);\n\n          case 5:\n            medata = _context2.sent;\n            meMessage = protobuf.blog_detail.deserializeBinary(medata);\n            return _context2.abrupt(\"return\", meMessage.toObject());\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function GetBlogDetail(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var GetBlogTypes =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var res, data, message;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.get(\"\".concat(apiHost, \"/v1/client/blog/types\"), {\n              responseType: 'blob'\n            });\n\n          case 2:\n            res = _context3.sent;\n            _context3.next = 5;\n            return readStream(res.data);\n\n          case 5:\n            data = _context3.sent;\n            message = protobuf.blog_types.deserializeBinary(data);\n            return _context3.abrupt(\"return\", message.toObject());\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function GetBlogTypes() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var GetBlogRanking =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    var limit,\n        rankingRes,\n        rankingData,\n        rankingMessage,\n        _args4 = arguments;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            limit = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : 5;\n            _context4.next = 3;\n            return axios.get(\"\".concat(apiHost, \"/v1/client/blog/ranking?limit=\").concat(limit), {\n              responseType: 'blob'\n            });\n\n          case 3:\n            rankingRes = _context4.sent;\n            _context4.next = 6;\n            return readStream(rankingRes.data);\n\n          case 6:\n            rankingData = _context4.sent;\n            rankingMessage = protobuf.blog_list.deserializeBinary(rankingData);\n            return _context4.abrupt(\"return\", rankingMessage.toObject());\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function GetBlogRanking() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var GetBlogRecommend =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5() {\n    var recommendRes, recommendData, recommendMessage;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return axios.get(\"\".concat(apiHost, \"/v1/client/blog/recommend\"), {\n              responseType: 'blob'\n            });\n\n          case 2:\n            recommendRes = _context5.sent;\n            _context5.next = 5;\n            return readStream(recommendRes.data);\n\n          case 5:\n            recommendData = _context5.sent;\n            recommendMessage = protobuf.blog_list.deserializeBinary(recommendData);\n            return _context5.abrupt(\"return\", recommendMessage.toObject());\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function GetBlogRecommend() {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var GetBlogComments =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6() {\n    var id,\n        commentRes,\n        commentData,\n        commentMessage,\n        _args6 = arguments;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            id = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : 0;\n            _context6.next = 3;\n            return axios.get(\"\".concat(apiHost, \"/v1/client/blog/comment/list?blog_id=\").concat(id), {\n              responseType: 'blob'\n            });\n\n          case 3:\n            commentRes = _context6.sent;\n            _context6.next = 6;\n            return readStream(commentRes.data);\n\n          case 6:\n            commentData = _context6.sent;\n            commentMessage = protobuf.blog_comments.deserializeBinary(commentData);\n            return _context6.abrupt(\"return\", commentMessage.toObject());\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function GetBlogComments() {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var SubMitComment =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(saytext, blogId) {\n    var message, bytes, res, data;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            message = new blobComment.blog_comment();\n            message.setContent(saytext);\n            message.setBlogId(blogId);\n            bytes = message.serializeBinary();\n            _context7.next = 6;\n            return axios.post(\"\".concat(apiHost, \"/v1/client/blog/comment/submit\"), bytes, {\n              responseType: 'blob',\n              headers: {\n                'Content-Type': 'application/octet-stream'\n              }\n            });\n\n          case 6:\n            res = _context7.sent;\n            _context7.next = 9;\n            return readStream(res.data);\n\n          case 9:\n            data = _context7.sent;\n            data = e.resp.deserializeBinary(data);\n            return _context7.abrupt(\"return\", data.toObject());\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function SubMitComment(_x4, _x5) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var ReadNetFile =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(url) {\n    var hres, hdata, hmessage;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return axios.get(\"\".concat(apiHost, \"/v1/public/netfile/read?key=\").concat(url), {\n              responseType: 'blob'\n            });\n\n          case 2:\n            hres = _context8.sent;\n            _context8.next = 5;\n            return readStream(hres.data);\n\n          case 5:\n            hdata = _context8.sent;\n            hmessage = protobuf.file_content.deserializeBinary(hdata);\n            return _context8.abrupt(\"return\", hmessage.toObject());\n\n          case 8:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function ReadNetFile(_x6) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var MakeGood =\n/*#__PURE__*/\nfunction () {\n  var _ref9 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(blogId) {\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return axios.post(\"\".concat(apiHost, \"/v1/client/blog/good/make?blog_id=\").concat(blogId));\n\n          case 2:\n            return _context9.abrupt(\"return\", _context9.sent);\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function MakeGood(_x7) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var GetBlogRooms =\n/*#__PURE__*/\nfunction () {\n  var _ref10 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee10() {\n    var id,\n        res,\n        data,\n        _args10 = arguments;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            id = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : 0;\n            _context10.next = 3;\n            return axios.get(\"\".concat(apiHost, \"/blog/room/list\"), {\n              responseType: 'blob'\n            });\n\n          case 3:\n            res = _context10.sent;\n            _context10.next = 6;\n            return readStream(res.data);\n\n          case 6:\n            data = _context10.sent;\n            return _context10.abrupt(\"return\", protobuf.blog_rooms.deserializeBinary(data).toObject());\n\n          case 8:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function GetBlogRooms() {\n    return _ref10.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/justin/Desktop/my/client-pc/apis/blog.js"],"names":["axios","apiHost","readStream","protobuf","blobComment","e","GetBlogList","tp","name","get","responseType","res","data","message","blog_list","deserializeBinary","toObject","GetBlogDetail","id","meDetail","medata","meMessage","blog_detail","GetBlogTypes","blog_types","GetBlogRanking","limit","rankingRes","rankingData","rankingMessage","GetBlogRecommend","recommendRes","recommendData","recommendMessage","GetBlogComments","commentRes","commentData","commentMessage","blog_comments","SubMitComment","saytext","blogId","blog_comment","setContent","setBlogId","bytes","serializeBinary","post","headers","resp","ReadNetFile","url","hres","hdata","hmessage","file_content","MakeGood","GetBlogRooms","blog_rooms"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {apiHost} from '../utils/config';\nimport readStream from '../utils/util';\nimport protobuf from \"../proto/resp_pb\";\nimport blobComment from \"../proto/blogComment_pb\";\nimport e from \"../proto/errors_pb\";\nexport const GetBlogList = async (tp,name) => {\n    let res = await axios.get(`${apiHost}/v1/client/blog/list?tp=${tp}&name=${name}`,{\n        responseType: 'blob'\n    })\n    let data = await readStream(res.data);\n    let message = protobuf.blog_list.deserializeBinary(data);\n    data = message.toObject();\n    return data;\n}\n\nexport const GetBlogDetail = async (id) => {\n    let meDetail = await axios.get(`${apiHost}/v1/client/blog/detail?id=${id}`,{\n        responseType: 'blob'\n    })\n    let medata = await readStream(meDetail.data);\n    let meMessage = protobuf.blog_detail.deserializeBinary(medata);\n    return meMessage.toObject();\n}\n\nexport const GetBlogTypes = async () => {\n    let res = await axios.get(`${apiHost}/v1/client/blog/types`,{\n        responseType: 'blob'\n    })\n    let data = await readStream(res.data);\n    let message = protobuf.blog_types.deserializeBinary(data);\n    return message.toObject();\n}\n\nexport const GetBlogRanking = async (limit = 5) => {\n    let rankingRes = await axios.get(`${apiHost}/v1/client/blog/ranking?limit=${limit}`,{\n        responseType: 'blob'\n    })\n    let rankingData = await readStream(rankingRes.data);\n    let rankingMessage = protobuf.blog_list.deserializeBinary(rankingData);\n    return rankingMessage.toObject();\n}\n\nexport const GetBlogRecommend = async () => {\n    let recommendRes = await axios.get(`${apiHost}/v1/client/blog/recommend`,{\n        responseType: 'blob'\n    })\n    let recommendData = await readStream(recommendRes.data);\n    let recommendMessage = protobuf.blog_list.deserializeBinary(recommendData);\n    return recommendMessage.toObject();\n}\n\nexport const GetBlogComments = async (id = 0) => {\n    let commentRes = await axios.get(`${apiHost}/v1/client/blog/comment/list?blog_id=${id}`,{\n        responseType: 'blob'\n    })\n    let commentData = await readStream(commentRes.data);\n    let commentMessage = protobuf.blog_comments.deserializeBinary(commentData);\n    return commentMessage.toObject()\n}\n\nexport const SubMitComment = async (saytext,blogId) => {\n    let message = new blobComment.blog_comment();\n        message.setContent(saytext);\n        message.setBlogId(blogId);\n    let bytes = message.serializeBinary();\n    let res = await axios.post(`${apiHost}/v1/client/blog/comment/submit`,bytes,{\n        responseType: 'blob',\n        headers: {'Content-Type':'application/octet-stream'}\n    })\n    let data = await readStream(res.data);\n    data = e.resp.deserializeBinary(data);\n    return data.toObject()\n}\n\nexport const ReadNetFile = async (url) => {\n    let hres = await axios.get(`${apiHost}/v1/public/netfile/read?key=${url}`,{\n        responseType: 'blob'\n    })\n    let hdata = await readStream(hres.data);\n    let hmessage = protobuf.file_content.deserializeBinary(hdata);\n    return hmessage.toObject();\n}\n\nexport const MakeGood = async (blogId) => {\n    return await axios.post(`${apiHost}/v1/client/blog/good/make?blog_id=${blogId}`)\n}\n\nexport const GetBlogRooms = async (id = 0) => {\n    let res = await axios.get(`${apiHost}/blog/room/list`,{\n        responseType: 'blob'\n    })\n    let data = await readStream(res.data);\n    return protobuf.blog_rooms.deserializeBinary(data).toObject();\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}