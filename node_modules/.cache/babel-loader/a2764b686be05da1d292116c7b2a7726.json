{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/justin/Desktop/my/client-pc/pages/chatroom.js\";\nimport React from \"react\";\nimport Layout from '../components/layout';\nimport * as api from '../apis/blog';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var socket;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                socket = new ReconnectingWebSocket(\"ws://localhost:14001/v1/ws/chatroom\");\n                socket.debug = true;\n                socket.timeoutInterval = 5400;\n\n                socket.onopen = function () {\n                  socket.send(\"发送数据\");\n                };\n\n                socket.onmessage = function (evt) {\n                  var received_msg = evt.data;\n                  console.log(evt);\n                };\n\n                socket.onclose = function () {\n                  console.log(\"链接已关闭\");\n                };\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var blogDtail = this.state.blogDtail;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"1122\");\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref) {\n        var req, query, jsonPageRes, userAgent;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                req = _ref.req, query = _ref.query, jsonPageRes = _ref.jsonPageRes;\n                userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n                return _context2.abrupt(\"return\", {\n                  userAgent: userAgent,\n                  query: query,\n                  jsonPageRes: jsonPageRes\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/justin/Desktop/my/client-pc/pages/chatroom.js"],"names":["Layout","api","socket","ReconnectingWebSocket","debug","timeoutInterval","onopen","send","onmessage","evt","received_msg","data","console","log","onclose","blogDtail","state","req","query","jsonPageRes","userAgent","headers","navigator","React","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;;;;;;;;;;;;;;;;;;;;4DAQU,E;;;;;;;;;;;;;;;;AAKFC,gBAAAA,M,GAAS,IAAIC,qBAAJ,CAA0B,qCAA1B,C;AACTD,gBAAAA,MAAM,CAACE,KAAP,GAAe,IAAf;AACAF,gBAAAA,MAAM,CAACG,eAAP,GAAyB,IAAzB;;AACAH,gBAAAA,MAAM,CAACI,MAAP,GAAgB,YAAU;AACxBJ,kBAAAA,MAAM,CAACK,IAAP,CAAY,MAAZ;AACD,iBAFD;;AAIAL,gBAAAA,MAAM,CAACM,SAAP,GAAmB,UAAUC,GAAV,EACnB;AACE,sBAAIC,YAAY,GAAGD,GAAG,CAACE,IAAvB;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,iBAJD;;AAMAP,gBAAAA,MAAM,CAACY,OAAP,GAAiB,YACjB;AACEF,kBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,iBAHD;;;;;;;;;;;;;;;;;;6BAMG;AAAA,UACAE,SADA,GACa,KAAKC,KADlB,CACAD,SADA;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;;;;;;;;;;;;AAlC8BE,gBAAAA,G,QAAAA,G,EAAIC,K,QAAAA,K,EAAMC,W,QAAAA,W;AACjCC,gBAAAA,S,GAAYH,GAAG,GAAGA,GAAG,CAACI,OAAJ,CAAY,YAAZ,CAAH,GAA+BC,SAAS,CAACF,S;kDACvD;AAAEA,kBAAAA,SAAS,EAATA,SAAF;AAAYF,kBAAAA,KAAK,EAALA,KAAZ;AAAkBC,kBAAAA,WAAW,EAAXA;AAAlB,iB;;;;;;;;;;;;;;;;;;;EAHkBI,KAAK,CAACC,S","sourcesContent":["import Layout from '../components/layout';\nimport * as api from '../apis/blog';\n\nexport default class extends React.Component {\n  static async getInitialProps({ req,query,jsonPageRes }) {\n    const userAgent = req ? req.headers['user-agent'] : navigator.userAgent\n    return { userAgent,query,jsonPageRes }\n  }\n\n  state = {\n     \n  }\n\n  async componentDidMount(){\n    var socket = new ReconnectingWebSocket(\"ws://localhost:14001/v1/ws/chatroom\");\n        socket.debug = true;\n        socket.timeoutInterval = 5400;\n        socket.onopen = function(){\n          socket.send(\"发送数据\");\n        };\n            \n        socket.onmessage = function (evt) \n        { \n          var received_msg = evt.data;\n          console.log(evt)\n        };\n            \n        socket.onclose = function()\n        { \n          console.log(\"链接已关闭\")\n        };\n  }\n\n  render() {\n    const {blogDtail} = this.state\n    return (\n      <div>1122</div> \n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}