{"ast":null,"code":"/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.blogListRes', null, global);\ngoog.exportSymbol('proto.detailRes', null, global);\ngoog.exportSymbol('proto.fileReadRes', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.detailRes = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.detailRes, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.detailRes.displayName = 'proto.detailRes';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.detailRes.prototype.toObject = function (opt_includeInstance) {\n    return proto.detailRes.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.detailRes} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.detailRes.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      view: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      preface: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      htmlTxtUrl: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      recommended: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      createTime: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      updateTime: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      top: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      name: jspb.Message.getFieldWithDefault(msg, 9, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.detailRes}\n */\n\n\nproto.detailRes.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.detailRes();\n  return proto.detailRes.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.detailRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.detailRes}\n */\n\n\nproto.detailRes.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setView(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPreface(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setHtmlTxtUrl(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setRecommended(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreateTime(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdateTime(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setTop(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.detailRes.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.detailRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.detailRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.detailRes.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getView();\n\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n\n  f = message.getPreface();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getHtmlTxtUrl();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getRecommended();\n\n  if (f !== 0) {\n    writer.writeInt32(5, f);\n  }\n\n  f = message.getCreateTime();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getUpdateTime();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getTop();\n\n  if (f !== 0) {\n    writer.writeInt32(8, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.detailRes.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.detailRes.prototype.setId = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional int32 view = 2;\n * @return {number}\n */\n\n\nproto.detailRes.prototype.getView = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.detailRes.prototype.setView = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional string preface = 3;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getPreface = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setPreface = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string html_txt_url = 4;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getHtmlTxtUrl = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setHtmlTxtUrl = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional int32 recommended = 5;\n * @return {number}\n */\n\n\nproto.detailRes.prototype.getRecommended = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.detailRes.prototype.setRecommended = function (value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional string create_time = 6;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getCreateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setCreateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional string update_time = 7;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getUpdateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setUpdateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional int32 top = 8;\n * @return {number}\n */\n\n\nproto.detailRes.prototype.getTop = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.detailRes.prototype.setTop = function (value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n/**\n * optional string name = 9;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setName = function (value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.fileReadRes = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.fileReadRes, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.fileReadRes.displayName = 'proto.fileReadRes';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.fileReadRes.prototype.toObject = function (opt_includeInstance) {\n    return proto.fileReadRes.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.fileReadRes} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.fileReadRes.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      txt: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.fileReadRes}\n */\n\n\nproto.fileReadRes.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.fileReadRes();\n  return proto.fileReadRes.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.fileReadRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.fileReadRes}\n */\n\n\nproto.fileReadRes.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTxt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.fileReadRes.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.fileReadRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.fileReadRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.fileReadRes.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTxt();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string txt = 1;\n * @return {string}\n */\n\n\nproto.fileReadRes.prototype.getTxt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.fileReadRes.prototype.setTxt = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.blogListRes = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.blogListRes.repeatedFields_, null);\n};\n\ngoog.inherits(proto.blogListRes, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.blogListRes.displayName = 'proto.blogListRes';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.blogListRes.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.blogListRes.prototype.toObject = function (opt_includeInstance) {\n    return proto.blogListRes.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.blogListRes} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.blogListRes.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      listList: jspb.Message.toObjectList(msg.getListList(), proto.detailRes.toObject, includeInstance),\n      page: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      size: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      total: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogListRes}\n */\n\n\nproto.blogListRes.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogListRes();\n  return proto.blogListRes.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogListRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogListRes}\n */\n\n\nproto.blogListRes.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.detailRes();\n        reader.readMessage(value, proto.detailRes.deserializeBinaryFromReader);\n        msg.addList(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setPage(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setSize(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setTotal(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.blogListRes.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.blogListRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogListRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.blogListRes.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getListList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.detailRes.serializeBinaryToWriter);\n  }\n\n  f = message.getPage();\n\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n\n  f = message.getSize();\n\n  if (f !== 0) {\n    writer.writeInt32(3, f);\n  }\n\n  f = message.getTotal();\n\n  if (f !== 0) {\n    writer.writeInt32(4, f);\n  }\n};\n/**\n * repeated detailRes list = 1;\n * @return {!Array.<!proto.detailRes>}\n */\n\n\nproto.blogListRes.prototype.getListList = function () {\n  return (\n    /** @type{!Array.<!proto.detailRes>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.detailRes, 1)\n  );\n};\n/** @param {!Array.<!proto.detailRes>} value */\n\n\nproto.blogListRes.prototype.setListList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.detailRes=} opt_value\n * @param {number=} opt_index\n * @return {!proto.detailRes}\n */\n\n\nproto.blogListRes.prototype.addList = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.detailRes, opt_index);\n};\n\nproto.blogListRes.prototype.clearListList = function () {\n  this.setListList([]);\n};\n/**\n * optional int32 page = 2;\n * @return {number}\n */\n\n\nproto.blogListRes.prototype.getPage = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blogListRes.prototype.setPage = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional int32 size = 3;\n * @return {number}\n */\n\n\nproto.blogListRes.prototype.getSize = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blogListRes.prototype.setSize = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional int32 total = 4;\n * @return {number}\n */\n\n\nproto.blogListRes.prototype.getTotal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blogListRes.prototype.setTotal = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\ngoog.object.extend(exports, proto);","map":null,"metadata":{},"sourceType":"module"}