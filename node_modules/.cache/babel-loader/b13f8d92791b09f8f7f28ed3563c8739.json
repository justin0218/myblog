{"ast":null,"code":"/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.blogComment', null, global);\ngoog.exportSymbol('proto.blogComments', null, global);\ngoog.exportSymbol('proto.blogListRes', null, global);\ngoog.exportSymbol('proto.detailRes', null, global);\ngoog.exportSymbol('proto.fileReadRes', null, global);\ngoog.exportSymbol('proto.tp', null, global);\ngoog.exportSymbol('proto.tps', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.detailRes = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.detailRes, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.detailRes.displayName = 'proto.detailRes';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.detailRes.prototype.toObject = function (opt_includeInstance) {\n    return proto.detailRes.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.detailRes} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.detailRes.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      view: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      preface: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      htmlTxtUrl: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      recommended: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      createTime: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      updateTime: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      type: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      name: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n      goodNum: jspb.Message.getFieldWithDefault(msg, 10, 0),\n      next: (f = msg.getNext()) && proto.detailRes.toObject(includeInstance, f),\n      prev: (f = msg.getPrev()) && proto.detailRes.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.detailRes}\n */\n\n\nproto.detailRes.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.detailRes();\n  return proto.detailRes.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.detailRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.detailRes}\n */\n\n\nproto.detailRes.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setView(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPreface(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setHtmlTxtUrl(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setRecommended(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreateTime(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdateTime(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setType(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setGoodNum(value);\n        break;\n\n      case 11:\n        var value = new proto.detailRes();\n        reader.readMessage(value, proto.detailRes.deserializeBinaryFromReader);\n        msg.setNext(value);\n        break;\n\n      case 12:\n        var value = new proto.detailRes();\n        reader.readMessage(value, proto.detailRes.deserializeBinaryFromReader);\n        msg.setPrev(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.detailRes.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.detailRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.detailRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.detailRes.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getView();\n\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n\n  f = message.getPreface();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getHtmlTxtUrl();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getRecommended();\n\n  if (f !== 0) {\n    writer.writeInt32(5, f);\n  }\n\n  f = message.getCreateTime();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getUpdateTime();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getType();\n\n  if (f !== 0) {\n    writer.writeInt32(8, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n\n  f = message.getGoodNum();\n\n  if (f !== 0) {\n    writer.writeInt32(10, f);\n  }\n\n  f = message.getNext();\n\n  if (f != null) {\n    writer.writeMessage(11, f, proto.detailRes.serializeBinaryToWriter);\n  }\n\n  f = message.getPrev();\n\n  if (f != null) {\n    writer.writeMessage(12, f, proto.detailRes.serializeBinaryToWriter);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.detailRes.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.detailRes.prototype.setId = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional int32 view = 2;\n * @return {number}\n */\n\n\nproto.detailRes.prototype.getView = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.detailRes.prototype.setView = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional string preface = 3;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getPreface = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setPreface = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string html_txt_url = 4;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getHtmlTxtUrl = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setHtmlTxtUrl = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional int32 recommended = 5;\n * @return {number}\n */\n\n\nproto.detailRes.prototype.getRecommended = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.detailRes.prototype.setRecommended = function (value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional string create_time = 6;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getCreateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setCreateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional string update_time = 7;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getUpdateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setUpdateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional int32 type = 8;\n * @return {number}\n */\n\n\nproto.detailRes.prototype.getType = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.detailRes.prototype.setType = function (value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n/**\n * optional string name = 9;\n * @return {string}\n */\n\n\nproto.detailRes.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.detailRes.prototype.setName = function (value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n/**\n * optional int32 good_num = 10;\n * @return {number}\n */\n\n\nproto.detailRes.prototype.getGoodNum = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 10, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.detailRes.prototype.setGoodNum = function (value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n/**\n * optional detailRes next = 11;\n * @return {?proto.detailRes}\n */\n\n\nproto.detailRes.prototype.getNext = function () {\n  return (\n    /** @type{?proto.detailRes} */\n    jspb.Message.getWrapperField(this, proto.detailRes, 11)\n  );\n};\n/** @param {?proto.detailRes|undefined} value */\n\n\nproto.detailRes.prototype.setNext = function (value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n\nproto.detailRes.prototype.clearNext = function () {\n  this.setNext(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.detailRes.prototype.hasNext = function () {\n  return jspb.Message.getField(this, 11) != null;\n};\n/**\n * optional detailRes prev = 12;\n * @return {?proto.detailRes}\n */\n\n\nproto.detailRes.prototype.getPrev = function () {\n  return (\n    /** @type{?proto.detailRes} */\n    jspb.Message.getWrapperField(this, proto.detailRes, 12)\n  );\n};\n/** @param {?proto.detailRes|undefined} value */\n\n\nproto.detailRes.prototype.setPrev = function (value) {\n  jspb.Message.setWrapperField(this, 12, value);\n};\n\nproto.detailRes.prototype.clearPrev = function () {\n  this.setPrev(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.detailRes.prototype.hasPrev = function () {\n  return jspb.Message.getField(this, 12) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.fileReadRes = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.fileReadRes, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.fileReadRes.displayName = 'proto.fileReadRes';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.fileReadRes.prototype.toObject = function (opt_includeInstance) {\n    return proto.fileReadRes.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.fileReadRes} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.fileReadRes.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      txt: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.fileReadRes}\n */\n\n\nproto.fileReadRes.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.fileReadRes();\n  return proto.fileReadRes.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.fileReadRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.fileReadRes}\n */\n\n\nproto.fileReadRes.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTxt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.fileReadRes.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.fileReadRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.fileReadRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.fileReadRes.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTxt();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string txt = 1;\n * @return {string}\n */\n\n\nproto.fileReadRes.prototype.getTxt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.fileReadRes.prototype.setTxt = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.blogListRes = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.blogListRes.repeatedFields_, null);\n};\n\ngoog.inherits(proto.blogListRes, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.blogListRes.displayName = 'proto.blogListRes';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.blogListRes.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.blogListRes.prototype.toObject = function (opt_includeInstance) {\n    return proto.blogListRes.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.blogListRes} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.blogListRes.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      listList: jspb.Message.toObjectList(msg.getListList(), proto.detailRes.toObject, includeInstance),\n      page: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      size: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      total: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogListRes}\n */\n\n\nproto.blogListRes.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogListRes();\n  return proto.blogListRes.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogListRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogListRes}\n */\n\n\nproto.blogListRes.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.detailRes();\n        reader.readMessage(value, proto.detailRes.deserializeBinaryFromReader);\n        msg.addList(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setPage(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setSize(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setTotal(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.blogListRes.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.blogListRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogListRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.blogListRes.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getListList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.detailRes.serializeBinaryToWriter);\n  }\n\n  f = message.getPage();\n\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n\n  f = message.getSize();\n\n  if (f !== 0) {\n    writer.writeInt32(3, f);\n  }\n\n  f = message.getTotal();\n\n  if (f !== 0) {\n    writer.writeInt32(4, f);\n  }\n};\n/**\n * repeated detailRes list = 1;\n * @return {!Array.<!proto.detailRes>}\n */\n\n\nproto.blogListRes.prototype.getListList = function () {\n  return (\n    /** @type{!Array.<!proto.detailRes>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.detailRes, 1)\n  );\n};\n/** @param {!Array.<!proto.detailRes>} value */\n\n\nproto.blogListRes.prototype.setListList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.detailRes=} opt_value\n * @param {number=} opt_index\n * @return {!proto.detailRes}\n */\n\n\nproto.blogListRes.prototype.addList = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.detailRes, opt_index);\n};\n\nproto.blogListRes.prototype.clearListList = function () {\n  this.setListList([]);\n};\n/**\n * optional int32 page = 2;\n * @return {number}\n */\n\n\nproto.blogListRes.prototype.getPage = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blogListRes.prototype.setPage = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional int32 size = 3;\n * @return {number}\n */\n\n\nproto.blogListRes.prototype.getSize = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blogListRes.prototype.setSize = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional int32 total = 4;\n * @return {number}\n */\n\n\nproto.blogListRes.prototype.getTotal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blogListRes.prototype.setTotal = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tp = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tp, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tp.displayName = 'proto.tp';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tp.prototype.toObject = function (opt_includeInstance) {\n    return proto.tp.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tp} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tp.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      lable: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      createTime: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      updateTime: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      blogNum: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tp}\n */\n\n\nproto.tp.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tp();\n  return proto.tp.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tp} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tp}\n */\n\n\nproto.tp.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setLable(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreateTime(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdateTime(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setBlogNum(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tp.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tp.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tp} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tp.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getLable();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getCreateTime();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getUpdateTime();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getBlogNum();\n\n  if (f !== 0) {\n    writer.writeInt32(5, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.tp.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.tp.prototype.setId = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string lable = 2;\n * @return {string}\n */\n\n\nproto.tp.prototype.getLable = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.tp.prototype.setLable = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string create_time = 3;\n * @return {string}\n */\n\n\nproto.tp.prototype.getCreateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.tp.prototype.setCreateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string update_time = 4;\n * @return {string}\n */\n\n\nproto.tp.prototype.getUpdateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.tp.prototype.setUpdateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional int32 blog_num = 5;\n * @return {number}\n */\n\n\nproto.tp.prototype.getBlogNum = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.tp.prototype.setBlogNum = function (value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tps = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tps.repeatedFields_, null);\n};\n\ngoog.inherits(proto.tps, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tps.displayName = 'proto.tps';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.tps.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tps.prototype.toObject = function (opt_includeInstance) {\n    return proto.tps.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tps} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tps.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      listList: jspb.Message.toObjectList(msg.getListList(), proto.tp.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tps}\n */\n\n\nproto.tps.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tps();\n  return proto.tps.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tps} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tps}\n */\n\n\nproto.tps.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.tp();\n        reader.readMessage(value, proto.tp.deserializeBinaryFromReader);\n        msg.addList(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tps.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tps.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tps} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tps.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getListList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.tp.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated tp list = 1;\n * @return {!Array.<!proto.tp>}\n */\n\n\nproto.tps.prototype.getListList = function () {\n  return (\n    /** @type{!Array.<!proto.tp>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.tp, 1)\n  );\n};\n/** @param {!Array.<!proto.tp>} value */\n\n\nproto.tps.prototype.setListList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.tp=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tp}\n */\n\n\nproto.tps.prototype.addList = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tp, opt_index);\n};\n\nproto.tps.prototype.clearListList = function () {\n  this.setListList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.blogComment = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.blogComment, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.blogComment.displayName = 'proto.blogComment';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.blogComment.prototype.toObject = function (opt_includeInstance) {\n    return proto.blogComment.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.blogComment} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.blogComment.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      blogId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      content: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      name: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      createTime: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      updateTime: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogComment}\n */\n\n\nproto.blogComment.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogComment();\n  return proto.blogComment.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogComment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogComment}\n */\n\n\nproto.blogComment.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setBlogId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setContent(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreateTime(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdateTime(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.blogComment.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.blogComment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogComment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.blogComment.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getBlogId();\n\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n\n  f = message.getContent();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getCreateTime();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getUpdateTime();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.blogComment.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blogComment.prototype.setId = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional int32 blog_id = 2;\n * @return {number}\n */\n\n\nproto.blogComment.prototype.getBlogId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blogComment.prototype.setBlogId = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional string content = 3;\n * @return {string}\n */\n\n\nproto.blogComment.prototype.getContent = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.blogComment.prototype.setContent = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string name = 4;\n * @return {string}\n */\n\n\nproto.blogComment.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.blogComment.prototype.setName = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string create_time = 5;\n * @return {string}\n */\n\n\nproto.blogComment.prototype.getCreateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.blogComment.prototype.setCreateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string update_time = 6;\n * @return {string}\n */\n\n\nproto.blogComment.prototype.getUpdateTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.blogComment.prototype.setUpdateTime = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.blogComments = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.blogComments.repeatedFields_, null);\n};\n\ngoog.inherits(proto.blogComments, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.blogComments.displayName = 'proto.blogComments';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.blogComments.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.blogComments.prototype.toObject = function (opt_includeInstance) {\n    return proto.blogComments.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.blogComments} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.blogComments.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      listList: jspb.Message.toObjectList(msg.getListList(), proto.blogComment.toObject, includeInstance),\n      total: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogComments}\n */\n\n\nproto.blogComments.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogComments();\n  return proto.blogComments.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogComments} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogComments}\n */\n\n\nproto.blogComments.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.blogComment();\n        reader.readMessage(value, proto.blogComment.deserializeBinaryFromReader);\n        msg.addList(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setTotal(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.blogComments.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.blogComments.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogComments} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.blogComments.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getListList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.blogComment.serializeBinaryToWriter);\n  }\n\n  f = message.getTotal();\n\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n};\n/**\n * repeated blogComment list = 1;\n * @return {!Array.<!proto.blogComment>}\n */\n\n\nproto.blogComments.prototype.getListList = function () {\n  return (\n    /** @type{!Array.<!proto.blogComment>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.blogComment, 1)\n  );\n};\n/** @param {!Array.<!proto.blogComment>} value */\n\n\nproto.blogComments.prototype.setListList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.blogComment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.blogComment}\n */\n\n\nproto.blogComments.prototype.addList = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blogComment, opt_index);\n};\n\nproto.blogComments.prototype.clearListList = function () {\n  this.setListList([]);\n};\n/**\n * optional int32 total = 2;\n * @return {number}\n */\n\n\nproto.blogComments.prototype.getTotal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.blogComments.prototype.setTotal = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/Users/justin/Desktop/private/nextjs/proto/blog_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","detailRes","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","view","preface","htmlTxtUrl","recommended","createTime","updateTime","type","name","goodNum","next","getNext","prev","getPrev","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readInt32","setId","setView","readString","setPreface","setHtmlTxtUrl","setRecommended","setCreateTime","setUpdateTime","setType","setName","setGoodNum","readMessage","setNext","setPrev","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","writeInt32","getView","getPreface","length","writeString","getHtmlTxtUrl","getRecommended","getCreateTime","getUpdateTime","getType","getName","getGoodNum","writeMessage","setProto3IntField","setProto3StringField","getWrapperField","setWrapperField","clearNext","hasNext","getField","clearPrev","hasPrev","fileReadRes","txt","setTxt","getTxt","blogListRes","repeatedFields_","listList","toObjectList","getListList","page","size","total","addList","setPage","setSize","setTotal","writeRepeatedMessage","getPage","getSize","getTotal","getRepeatedWrapperField","setListList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearListList","tp","lable","blogNum","setLable","setBlogNum","getLable","getBlogNum","tps","blogComment","blogId","content","setBlogId","setContent","getBlogId","getContent","blogComments","object","extend","exports"],"mappings":"AAAA;;;;;;;AAOA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGF,IAAX;AACA,IAAIG,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;AAEAF,IAAI,CAACG,YAAL,CAAkB,mBAAlB,EAAuC,IAAvC,EAA6CF,MAA7C;AACAD,IAAI,CAACG,YAAL,CAAkB,oBAAlB,EAAwC,IAAxC,EAA8CF,MAA9C;AACAD,IAAI,CAACG,YAAL,CAAkB,mBAAlB,EAAuC,IAAvC,EAA6CF,MAA7C;AACAD,IAAI,CAACG,YAAL,CAAkB,iBAAlB,EAAqC,IAArC,EAA2CF,MAA3C;AACAD,IAAI,CAACG,YAAL,CAAkB,mBAAlB,EAAuC,IAAvC,EAA6CF,MAA7C;AACAD,IAAI,CAACG,YAAL,CAAkB,UAAlB,EAA8B,IAA9B,EAAoCF,MAApC;AACAD,IAAI,CAACG,YAAL,CAAkB,WAAlB,EAA+B,IAA/B,EAAqCF,MAArC;AAEA;;;;;;;;;;;AAUAG,KAAK,CAACC,SAAN,GAAkB,UAASC,QAAT,EAAmB;AACnCR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAN,IAAI,CAACS,QAAL,CAAcL,KAAK,CAACC,SAApB,EAA+BP,IAAI,CAACS,OAApC;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3BP,EAAAA,KAAK,CAACC,SAAN,CAAgBO,WAAhB,GAA8B,iBAA9B;AACD;;AAGD,IAAId,IAAI,CAACS,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAT,EAAAA,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BC,QAA1B,GAAqC,UAASC,mBAAT,EAA8B;AACjE,WAAOZ,KAAK,CAACC,SAAN,CAAgBU,QAAhB,CAAyBC,mBAAzB,EAA8C,IAA9C,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAZ,EAAAA,KAAK,CAACC,SAAN,CAAgBU,QAAhB,GAA2B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACxD,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,EAAE,EAAEvB,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CADO;AAEXK,MAAAA,IAAI,EAAEzB,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFK;AAGXM,MAAAA,OAAO,EAAE1B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHE;AAIXO,MAAAA,UAAU,EAAE3B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAJD;AAKXQ,MAAAA,WAAW,EAAE5B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CALF;AAMXS,MAAAA,UAAU,EAAE7B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAND;AAOXU,MAAAA,UAAU,EAAE9B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAPD;AAQXW,MAAAA,IAAI,EAAE/B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CARK;AASXY,MAAAA,IAAI,EAAEhC,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CATK;AAUXa,MAAAA,OAAO,EAAEjC,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,EAAtC,EAA0C,CAA1C,CAVE;AAWXc,MAAAA,IAAI,EAAE,CAACb,CAAC,GAAGD,GAAG,CAACe,OAAJ,EAAL,KAAuB7B,KAAK,CAACC,SAAN,CAAgBU,QAAhB,CAAyBE,eAAzB,EAA0CE,CAA1C,CAXlB;AAYXe,MAAAA,IAAI,EAAE,CAACf,CAAC,GAAGD,GAAG,CAACiB,OAAJ,EAAL,KAAuB/B,KAAK,CAACC,SAAN,CAAgBU,QAAhB,CAAyBE,eAAzB,EAA0CE,CAA1C;AAZlB,KAAb;;AAeA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACgB,oBAAJ,GAA2BlB,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GApBD;AAqBC;AAGD;;;;;;;AAKAhB,KAAK,CAACC,SAAN,CAAgBgC,iBAAhB,GAAoC,UAASC,KAAT,EAAgB;AAClD,MAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIpB,GAAG,GAAG,IAAId,KAAK,CAACC,SAAV,EAAV;AACA,SAAOD,KAAK,CAACC,SAAN,CAAgBoC,2BAAhB,CAA4CvB,GAA5C,EAAiDqB,MAAjD,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAnC,KAAK,CAACC,SAAN,CAAgBoC,2BAAhB,GAA8C,UAASvB,GAAT,EAAcqB,MAAd,EAAsB;AAClE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAAC8B,KAAJ,CAAUF,KAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAAC+B,OAAJ,CAAYH,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACiC,UAAJ,CAAeL,KAAf;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACkC,aAAJ,CAAkBN,KAAlB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAACmC,cAAJ,CAAmBP,KAAnB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACoC,aAAJ,CAAkBR,KAAlB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACqC,aAAJ,CAAkBT,KAAlB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAACsC,OAAJ,CAAYV,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACuC,OAAJ,CAAYX,KAAZ;AACA;;AACF,WAAK,EAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAACwC,UAAJ,CAAeZ,KAAf;AACA;;AACF,WAAK,EAAL;AACE,YAAIA,KAAK,GAAG,IAAI1C,KAAK,CAACC,SAAV,EAAZ;AACAkC,QAAAA,MAAM,CAACoB,WAAP,CAAmBb,KAAnB,EAAyB1C,KAAK,CAACC,SAAN,CAAgBoC,2BAAzC;AACAvB,QAAAA,GAAG,CAAC0C,OAAJ,CAAYd,KAAZ;AACA;;AACF,WAAK,EAAL;AACE,YAAIA,KAAK,GAAG,IAAI1C,KAAK,CAACC,SAAV,EAAZ;AACAkC,QAAAA,MAAM,CAACoB,WAAP,CAAmBb,KAAnB,EAAyB1C,KAAK,CAACC,SAAN,CAAgBoC,2BAAzC;AACAvB,QAAAA,GAAG,CAAC2C,OAAJ,CAAYf,KAAZ;AACA;;AACF;AACEP,QAAAA,MAAM,CAACuB,SAAP;AACA;AArDF;AAuDD;;AACD,SAAO5C,GAAP;AACD,CA/DD;AAkEA;;;;;;AAIAd,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BiD,eAA1B,GAA4C,YAAW;AACrD,MAAIC,MAAM,GAAG,IAAIlE,IAAI,CAACmE,YAAT,EAAb;AACA7D,EAAAA,KAAK,CAACC,SAAN,CAAgB6D,uBAAhB,CAAwC,IAAxC,EAA8CF,MAA9C;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/D,KAAK,CAACC,SAAN,CAAgB6D,uBAAhB,GAA0C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAClE,MAAI7C,CAAC,GAAGkD,SAAR;AACAlD,EAAAA,CAAC,GAAGiD,OAAO,CAACE,KAAR,EAAJ;;AACA,MAAInD,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACI,OAAR,EAAJ;;AACA,MAAIrD,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACK,UAAR,EAAJ;;AACA,MAAItD,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACQ,aAAR,EAAJ;;AACA,MAAIzD,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACS,cAAR,EAAJ;;AACA,MAAI1D,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACU,aAAR,EAAJ;;AACA,MAAI3D,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACW,aAAR,EAAJ;;AACA,MAAI5D,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACY,OAAR,EAAJ;;AACA,MAAI7D,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACa,OAAR,EAAJ;;AACA,MAAI9D,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACc,UAAR,EAAJ;;AACA,MAAI/D,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,EADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACnC,OAAR,EAAJ;;AACA,MAAId,CAAC,IAAI,IAAT,EAAe;AACb6C,IAAAA,MAAM,CAACmB,YAAP,CACE,EADF,EAEEhE,CAFF,EAGEf,KAAK,CAACC,SAAN,CAAgB6D,uBAHlB;AAKD;;AACD/C,EAAAA,CAAC,GAAGiD,OAAO,CAACjC,OAAR,EAAJ;;AACA,MAAIhB,CAAC,IAAI,IAAT,EAAe;AACb6C,IAAAA,MAAM,CAACmB,YAAP,CACE,EADF,EAEEhE,CAFF,EAGEf,KAAK,CAACC,SAAN,CAAgB6D,uBAHlB;AAKD;AACF,CAxFD;AA2FA;;;;;;AAIA9D,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BwD,KAA1B,GAAkC,YAAW;AAC3C;AAAO;AAAuBxE,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BkC,KAA1B,GAAkC,UAASF,KAAT,EAAgB;AAChDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B0D,OAA1B,GAAoC,YAAW;AAC7C;AAAO;AAAuB1E,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BmC,OAA1B,GAAoC,UAASH,KAAT,EAAgB;AAClDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B2D,UAA1B,GAAuC,YAAW;AAChD;AAAO;AAAuB3E,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BqC,UAA1B,GAAuC,UAASL,KAAT,EAAgB;AACrDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B8D,aAA1B,GAA0C,YAAW;AACnD;AAAO;AAAuB9E,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BsC,aAA1B,GAA0C,UAASN,KAAT,EAAgB;AACxDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B+D,cAA1B,GAA2C,YAAW;AACpD;AAAO;AAAuB/E,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BuC,cAA1B,GAA2C,UAASP,KAAT,EAAgB;AACzDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BgE,aAA1B,GAA0C,YAAW;AACnD;AAAO;AAAuBhF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BwC,aAA1B,GAA0C,UAASR,KAAT,EAAgB;AACxDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BiE,aAA1B,GAA0C,YAAW;AACnD;AAAO;AAAuBjF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0ByC,aAA1B,GAA0C,UAAST,KAAT,EAAgB;AACxDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BkE,OAA1B,GAAoC,YAAW;AAC7C;AAAO;AAAuBlF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B0C,OAA1B,GAAoC,UAASV,KAAT,EAAgB;AAClDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BmE,OAA1B,GAAoC,YAAW;AAC7C;AAAO;AAAuBnF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B2C,OAA1B,GAAoC,UAASX,KAAT,EAAgB;AAClDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BoE,UAA1B,GAAuC,YAAW;AAChD;AAAO;AAAuBpF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,EAAvC,EAA2C,CAA3C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B4C,UAA1B,GAAuC,UAASZ,KAAT,EAAgB;AACrDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,EAArC,EAAyCtC,KAAzC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BmB,OAA1B,GAAoC,YAAW;AAC7C;AAAO;AACLnC,IAAAA,IAAI,CAACS,OAAL,CAAa+E,eAAb,CAA6B,IAA7B,EAAmClF,KAAK,CAACC,SAAzC,EAAoD,EAApD;AADF;AAED,CAHD;AAMA;;;AACAD,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B8C,OAA1B,GAAoC,UAASd,KAAT,EAAgB;AAClDhD,EAAAA,IAAI,CAACS,OAAL,CAAagF,eAAb,CAA6B,IAA7B,EAAmC,EAAnC,EAAuCzC,KAAvC;AACD,CAFD;;AAKA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B0E,SAA1B,GAAsC,YAAW;AAC/C,OAAK5B,OAAL,CAAaS,SAAb;AACD,CAFD;AAKA;;;;;;AAIAjE,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B2E,OAA1B,GAAoC,YAAW;AAC7C,SAAO3F,IAAI,CAACS,OAAL,CAAamF,QAAb,CAAsB,IAAtB,EAA4B,EAA5B,KAAmC,IAA1C;AACD,CAFD;AAKA;;;;;;AAIAtF,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0BqB,OAA1B,GAAoC,YAAW;AAC7C;AAAO;AACLrC,IAAAA,IAAI,CAACS,OAAL,CAAa+E,eAAb,CAA6B,IAA7B,EAAmClF,KAAK,CAACC,SAAzC,EAAoD,EAApD;AADF;AAED,CAHD;AAMA;;;AACAD,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B+C,OAA1B,GAAoC,UAASf,KAAT,EAAgB;AAClDhD,EAAAA,IAAI,CAACS,OAAL,CAAagF,eAAb,CAA6B,IAA7B,EAAmC,EAAnC,EAAuCzC,KAAvC;AACD,CAFD;;AAKA1C,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B6E,SAA1B,GAAsC,YAAW;AAC/C,OAAK9B,OAAL,CAAaQ,SAAb;AACD,CAFD;AAKA;;;;;;AAIAjE,KAAK,CAACC,SAAN,CAAgBS,SAAhB,CAA0B8E,OAA1B,GAAoC,YAAW;AAC7C,SAAO9F,IAAI,CAACS,OAAL,CAAamF,QAAb,CAAsB,IAAtB,EAA4B,EAA5B,KAAmC,IAA1C;AACD,CAFD;AAMA;;;;;;;;;;;;AAUAtF,KAAK,CAACyF,WAAN,GAAoB,UAASvF,QAAT,EAAmB;AACrCR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAN,IAAI,CAACS,QAAL,CAAcL,KAAK,CAACyF,WAApB,EAAiC/F,IAAI,CAACS,OAAtC;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3BP,EAAAA,KAAK,CAACyF,WAAN,CAAkBjF,WAAlB,GAAgC,mBAAhC;AACD;;AAGD,IAAId,IAAI,CAACS,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAT,EAAAA,KAAK,CAACyF,WAAN,CAAkB/E,SAAlB,CAA4BC,QAA5B,GAAuC,UAASC,mBAAT,EAA8B;AACnE,WAAOZ,KAAK,CAACyF,WAAN,CAAkB9E,QAAlB,CAA2BC,mBAA3B,EAAgD,IAAhD,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAZ,EAAAA,KAAK,CAACyF,WAAN,CAAkB9E,QAAlB,GAA6B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC1D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX0E,MAAAA,GAAG,EAAEhG,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AADM,KAAb;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACgB,oBAAJ,GAA2BlB,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKAhB,KAAK,CAACyF,WAAN,CAAkBxD,iBAAlB,GAAsC,UAASC,KAAT,EAAgB;AACpD,MAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIpB,GAAG,GAAG,IAAId,KAAK,CAACyF,WAAV,EAAV;AACA,SAAOzF,KAAK,CAACyF,WAAN,CAAkBpD,2BAAlB,CAA8CvB,GAA9C,EAAmDqB,MAAnD,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAnC,KAAK,CAACyF,WAAN,CAAkBpD,2BAAlB,GAAgD,UAASvB,GAAT,EAAcqB,MAAd,EAAsB;AACpE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAAC6E,MAAJ,CAAWjD,KAAX;AACA;;AACF;AACEP,QAAAA,MAAM,CAACuB,SAAP;AACA;AAPF;AASD;;AACD,SAAO5C,GAAP;AACD,CAjBD;AAoBA;;;;;;AAIAd,KAAK,CAACyF,WAAN,CAAkB/E,SAAlB,CAA4BiD,eAA5B,GAA8C,YAAW;AACvD,MAAIC,MAAM,GAAG,IAAIlE,IAAI,CAACmE,YAAT,EAAb;AACA7D,EAAAA,KAAK,CAACyF,WAAN,CAAkB3B,uBAAlB,CAA0C,IAA1C,EAAgDF,MAAhD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/D,KAAK,CAACyF,WAAN,CAAkB3B,uBAAlB,GAA4C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACpE,MAAI7C,CAAC,GAAGkD,SAAR;AACAlD,EAAAA,CAAC,GAAGiD,OAAO,CAAC4B,MAAR,EAAJ;;AACA,MAAI7E,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;AACF,CATD;AAYA;;;;;;AAIAf,KAAK,CAACyF,WAAN,CAAkB/E,SAAlB,CAA4BkF,MAA5B,GAAqC,YAAW;AAC9C;AAAO;AAAuBlG,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACyF,WAAN,CAAkB/E,SAAlB,CAA4BiF,MAA5B,GAAqC,UAASjD,KAAT,EAAgB;AACnDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAMA;;;;;;;;;;;;AAUA1C,KAAK,CAAC6F,WAAN,GAAoB,UAAS3F,QAAT,EAAmB;AACrCR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CF,KAAK,CAAC6F,WAAN,CAAkBC,eAAjE,EAAkF,IAAlF;AACD,CAFD;;AAGAlG,IAAI,CAACS,QAAL,CAAcL,KAAK,CAAC6F,WAApB,EAAiCnG,IAAI,CAACS,OAAtC;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3BP,EAAAA,KAAK,CAAC6F,WAAN,CAAkBrF,WAAlB,GAAgC,mBAAhC;AACD;AACD;;;;;;;AAKAR,KAAK,CAAC6F,WAAN,CAAkBC,eAAlB,GAAoC,CAAC,CAAD,CAApC;;AAIA,IAAIpG,IAAI,CAACS,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAT,EAAAA,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4BC,QAA5B,GAAuC,UAASC,mBAAT,EAA8B;AACnE,WAAOZ,KAAK,CAAC6F,WAAN,CAAkBlF,QAAlB,CAA2BC,mBAA3B,EAAgD,IAAhD,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAZ,EAAAA,KAAK,CAAC6F,WAAN,CAAkBlF,QAAlB,GAA6B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC1D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX+E,MAAAA,QAAQ,EAAErG,IAAI,CAACS,OAAL,CAAa6F,YAAb,CAA0BlF,GAAG,CAACmF,WAAJ,EAA1B,EACVjG,KAAK,CAACC,SAAN,CAAgBU,QADN,EACgBE,eADhB,CADC;AAGXqF,MAAAA,IAAI,EAAExG,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAHK;AAIXqF,MAAAA,IAAI,EAAEzG,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAJK;AAKXsF,MAAAA,KAAK,EAAE1G,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AALI,KAAb;;AAQA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACgB,oBAAJ,GAA2BlB,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAbD;AAcC;AAGD;;;;;;;AAKAhB,KAAK,CAAC6F,WAAN,CAAkB5D,iBAAlB,GAAsC,UAASC,KAAT,EAAgB;AACpD,MAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIpB,GAAG,GAAG,IAAId,KAAK,CAAC6F,WAAV,EAAV;AACA,SAAO7F,KAAK,CAAC6F,WAAN,CAAkBxD,2BAAlB,CAA8CvB,GAA9C,EAAmDqB,MAAnD,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAnC,KAAK,CAAC6F,WAAN,CAAkBxD,2BAAlB,GAAgD,UAASvB,GAAT,EAAcqB,MAAd,EAAsB;AACpE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI1C,KAAK,CAACC,SAAV,EAAZ;AACAkC,QAAAA,MAAM,CAACoB,WAAP,CAAmBb,KAAnB,EAAyB1C,KAAK,CAACC,SAAN,CAAgBoC,2BAAzC;AACAvB,QAAAA,GAAG,CAACuF,OAAJ,CAAY3D,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAACwF,OAAJ,CAAY5D,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAACyF,OAAJ,CAAY7D,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAAC0F,QAAJ,CAAa9D,KAAb;AACA;;AACF;AACEP,QAAAA,MAAM,CAACuB,SAAP;AACA;AApBF;AAsBD;;AACD,SAAO5C,GAAP;AACD,CA9BD;AAiCA;;;;;;AAIAd,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4BiD,eAA5B,GAA8C,YAAW;AACvD,MAAIC,MAAM,GAAG,IAAIlE,IAAI,CAACmE,YAAT,EAAb;AACA7D,EAAAA,KAAK,CAAC6F,WAAN,CAAkB/B,uBAAlB,CAA0C,IAA1C,EAAgDF,MAAhD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/D,KAAK,CAAC6F,WAAN,CAAkB/B,uBAAlB,GAA4C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACpE,MAAI7C,CAAC,GAAGkD,SAAR;AACAlD,EAAAA,CAAC,GAAGiD,OAAO,CAACiC,WAAR,EAAJ;;AACA,MAAIlF,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAAC6C,oBAAP,CACE,CADF,EAEE1F,CAFF,EAGEf,KAAK,CAACC,SAAN,CAAgB6D,uBAHlB;AAKD;;AACD/C,EAAAA,CAAC,GAAGiD,OAAO,CAAC0C,OAAR,EAAJ;;AACA,MAAI3F,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAAC2C,OAAR,EAAJ;;AACA,MAAI5F,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAAC4C,QAAR,EAAJ;;AACA,MAAI7F,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;AACF,CA/BD;AAkCA;;;;;;AAIAf,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4BuF,WAA5B,GAA0C,YAAW;AACnD;AAAO;AACLvG,IAAAA,IAAI,CAACS,OAAL,CAAa0G,uBAAb,CAAqC,IAArC,EAA2C7G,KAAK,CAACC,SAAjD,EAA4D,CAA5D;AADF;AAED,CAHD;AAMA;;;AACAD,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4BoG,WAA5B,GAA0C,UAASpE,KAAT,EAAgB;AACxDhD,EAAAA,IAAI,CAACS,OAAL,CAAa4G,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8CrE,KAA9C;AACD,CAFD;AAKA;;;;;;;AAKA1C,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4B2F,OAA5B,GAAsC,UAASW,SAAT,EAAoBC,SAApB,EAA+B;AACnE,SAAOvH,IAAI,CAACS,OAAL,CAAa+G,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDF,SAAhD,EAA2DhH,KAAK,CAACC,SAAjE,EAA4EgH,SAA5E,CAAP;AACD,CAFD;;AAKAjH,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4ByG,aAA5B,GAA4C,YAAW;AACrD,OAAKL,WAAL,CAAiB,EAAjB;AACD,CAFD;AAKA;;;;;;AAIA9G,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4BgG,OAA5B,GAAsC,YAAW;AAC/C;AAAO;AAAuBhH,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4B4F,OAA5B,GAAsC,UAAS5D,KAAT,EAAgB;AACpDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4BiG,OAA5B,GAAsC,YAAW;AAC/C;AAAO;AAAuBjH,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4B6F,OAA5B,GAAsC,UAAS7D,KAAT,EAAgB;AACpDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4BkG,QAA5B,GAAuC,YAAW;AAChD;AAAO;AAAuBlH,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAAC6F,WAAN,CAAkBnF,SAAlB,CAA4B8F,QAA5B,GAAuC,UAAS9D,KAAT,EAAgB;AACrDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAMA;;;;;;;;;;;;AAUA1C,KAAK,CAACoH,EAAN,GAAW,UAASlH,QAAT,EAAmB;AAC5BR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAN,IAAI,CAACS,QAAL,CAAcL,KAAK,CAACoH,EAApB,EAAwB1H,IAAI,CAACS,OAA7B;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3BP,EAAAA,KAAK,CAACoH,EAAN,CAAS5G,WAAT,GAAuB,UAAvB;AACD;;AAGD,IAAId,IAAI,CAACS,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAT,EAAAA,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmBC,QAAnB,GAA8B,UAASC,mBAAT,EAA8B;AAC1D,WAAOZ,KAAK,CAACoH,EAAN,CAASzG,QAAT,CAAkBC,mBAAlB,EAAuC,IAAvC,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAZ,EAAAA,KAAK,CAACoH,EAAN,CAASzG,QAAT,GAAoB,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACjD,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,EAAE,EAAEvB,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CADO;AAEXuG,MAAAA,KAAK,EAAE3H,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAFI;AAGXS,MAAAA,UAAU,EAAE7B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHD;AAIXU,MAAAA,UAAU,EAAE9B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAJD;AAKXwG,MAAAA,OAAO,EAAE5H,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AALE,KAAb;;AAQA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACgB,oBAAJ,GAA2BlB,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAbD;AAcC;AAGD;;;;;;;AAKAhB,KAAK,CAACoH,EAAN,CAASnF,iBAAT,GAA6B,UAASC,KAAT,EAAgB;AAC3C,MAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIpB,GAAG,GAAG,IAAId,KAAK,CAACoH,EAAV,EAAV;AACA,SAAOpH,KAAK,CAACoH,EAAN,CAAS/E,2BAAT,CAAqCvB,GAArC,EAA0CqB,MAA1C,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAnC,KAAK,CAACoH,EAAN,CAAS/E,2BAAT,GAAuC,UAASvB,GAAT,EAAcqB,MAAd,EAAsB;AAC3D,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAAC8B,KAAJ,CAAUF,KAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACyG,QAAJ,CAAa7E,KAAb;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACoC,aAAJ,CAAkBR,KAAlB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACqC,aAAJ,CAAkBT,KAAlB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAAC0G,UAAJ,CAAe9E,KAAf;AACA;;AACF;AACEP,QAAAA,MAAM,CAACuB,SAAP;AACA;AAvBF;AAyBD;;AACD,SAAO5C,GAAP;AACD,CAjCD;AAoCA;;;;;;AAIAd,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmBiD,eAAnB,GAAqC,YAAW;AAC9C,MAAIC,MAAM,GAAG,IAAIlE,IAAI,CAACmE,YAAT,EAAb;AACA7D,EAAAA,KAAK,CAACoH,EAAN,CAAStD,uBAAT,CAAiC,IAAjC,EAAuCF,MAAvC;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/D,KAAK,CAACoH,EAAN,CAAStD,uBAAT,GAAmC,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC3D,MAAI7C,CAAC,GAAGkD,SAAR;AACAlD,EAAAA,CAAC,GAAGiD,OAAO,CAACE,KAAR,EAAJ;;AACA,MAAInD,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACyD,QAAR,EAAJ;;AACA,MAAI1G,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACU,aAAR,EAAJ;;AACA,MAAI3D,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACW,aAAR,EAAJ;;AACA,MAAI5D,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAAC0D,UAAR,EAAJ;;AACA,MAAI3G,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;AACF,CArCD;AAwCA;;;;;;AAIAf,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmBwD,KAAnB,GAA2B,YAAW;AACpC;AAAO;AAAuBxE,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmBkC,KAAnB,GAA2B,UAASF,KAAT,EAAgB;AACzChD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmB+G,QAAnB,GAA8B,YAAW;AACvC;AAAO;AAAuB/H,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmB6G,QAAnB,GAA8B,UAAS7E,KAAT,EAAgB;AAC5ChD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmBgE,aAAnB,GAAmC,YAAW;AAC5C;AAAO;AAAuBhF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmBwC,aAAnB,GAAmC,UAASR,KAAT,EAAgB;AACjDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmBiE,aAAnB,GAAmC,YAAW;AAC5C;AAAO;AAAuBjF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmByC,aAAnB,GAAmC,UAAST,KAAT,EAAgB;AACjDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmBgH,UAAnB,GAAgC,YAAW;AACzC;AAAO;AAAuBhI,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACoH,EAAN,CAAS1G,SAAT,CAAmB8G,UAAnB,GAAgC,UAAS9E,KAAT,EAAgB;AAC9ChD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAMA;;;;;;;;;;;;AAUA1C,KAAK,CAAC2H,GAAN,GAAY,UAASzH,QAAT,EAAmB;AAC7BR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CF,KAAK,CAAC2H,GAAN,CAAU7B,eAAzD,EAA0E,IAA1E;AACD,CAFD;;AAGAlG,IAAI,CAACS,QAAL,CAAcL,KAAK,CAAC2H,GAApB,EAAyBjI,IAAI,CAACS,OAA9B;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3BP,EAAAA,KAAK,CAAC2H,GAAN,CAAUnH,WAAV,GAAwB,WAAxB;AACD;AACD;;;;;;;AAKAR,KAAK,CAAC2H,GAAN,CAAU7B,eAAV,GAA4B,CAAC,CAAD,CAA5B;;AAIA,IAAIpG,IAAI,CAACS,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAT,EAAAA,KAAK,CAAC2H,GAAN,CAAUjH,SAAV,CAAoBC,QAApB,GAA+B,UAASC,mBAAT,EAA8B;AAC3D,WAAOZ,KAAK,CAAC2H,GAAN,CAAUhH,QAAV,CAAmBC,mBAAnB,EAAwC,IAAxC,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAZ,EAAAA,KAAK,CAAC2H,GAAN,CAAUhH,QAAV,GAAqB,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAClD,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX+E,MAAAA,QAAQ,EAAErG,IAAI,CAACS,OAAL,CAAa6F,YAAb,CAA0BlF,GAAG,CAACmF,WAAJ,EAA1B,EACVjG,KAAK,CAACoH,EAAN,CAASzG,QADC,EACSE,eADT;AADC,KAAb;;AAKA,QAAIA,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACgB,oBAAJ,GAA2BlB,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;AAGD;;;;;;;AAKAhB,KAAK,CAAC2H,GAAN,CAAU1F,iBAAV,GAA8B,UAASC,KAAT,EAAgB;AAC5C,MAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIpB,GAAG,GAAG,IAAId,KAAK,CAAC2H,GAAV,EAAV;AACA,SAAO3H,KAAK,CAAC2H,GAAN,CAAUtF,2BAAV,CAAsCvB,GAAtC,EAA2CqB,MAA3C,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAnC,KAAK,CAAC2H,GAAN,CAAUtF,2BAAV,GAAwC,UAASvB,GAAT,EAAcqB,MAAd,EAAsB;AAC5D,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI1C,KAAK,CAACoH,EAAV,EAAZ;AACAjF,QAAAA,MAAM,CAACoB,WAAP,CAAmBb,KAAnB,EAAyB1C,KAAK,CAACoH,EAAN,CAAS/E,2BAAlC;AACAvB,QAAAA,GAAG,CAACuF,OAAJ,CAAY3D,KAAZ;AACA;;AACF;AACEP,QAAAA,MAAM,CAACuB,SAAP;AACA;AARF;AAUD;;AACD,SAAO5C,GAAP;AACD,CAlBD;AAqBA;;;;;;AAIAd,KAAK,CAAC2H,GAAN,CAAUjH,SAAV,CAAoBiD,eAApB,GAAsC,YAAW;AAC/C,MAAIC,MAAM,GAAG,IAAIlE,IAAI,CAACmE,YAAT,EAAb;AACA7D,EAAAA,KAAK,CAAC2H,GAAN,CAAU7D,uBAAV,CAAkC,IAAlC,EAAwCF,MAAxC;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/D,KAAK,CAAC2H,GAAN,CAAU7D,uBAAV,GAAoC,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC5D,MAAI7C,CAAC,GAAGkD,SAAR;AACAlD,EAAAA,CAAC,GAAGiD,OAAO,CAACiC,WAAR,EAAJ;;AACA,MAAIlF,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAAC6C,oBAAP,CACE,CADF,EAEE1F,CAFF,EAGEf,KAAK,CAACoH,EAAN,CAAStD,uBAHX;AAKD;AACF,CAVD;AAaA;;;;;;AAIA9D,KAAK,CAAC2H,GAAN,CAAUjH,SAAV,CAAoBuF,WAApB,GAAkC,YAAW;AAC3C;AAAO;AACLvG,IAAAA,IAAI,CAACS,OAAL,CAAa0G,uBAAb,CAAqC,IAArC,EAA2C7G,KAAK,CAACoH,EAAjD,EAAqD,CAArD;AADF;AAED,CAHD;AAMA;;;AACApH,KAAK,CAAC2H,GAAN,CAAUjH,SAAV,CAAoBoG,WAApB,GAAkC,UAASpE,KAAT,EAAgB;AAChDhD,EAAAA,IAAI,CAACS,OAAL,CAAa4G,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8CrE,KAA9C;AACD,CAFD;AAKA;;;;;;;AAKA1C,KAAK,CAAC2H,GAAN,CAAUjH,SAAV,CAAoB2F,OAApB,GAA8B,UAASW,SAAT,EAAoBC,SAApB,EAA+B;AAC3D,SAAOvH,IAAI,CAACS,OAAL,CAAa+G,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDF,SAAhD,EAA2DhH,KAAK,CAACoH,EAAjE,EAAqEH,SAArE,CAAP;AACD,CAFD;;AAKAjH,KAAK,CAAC2H,GAAN,CAAUjH,SAAV,CAAoByG,aAApB,GAAoC,YAAW;AAC7C,OAAKL,WAAL,CAAiB,EAAjB;AACD,CAFD;AAMA;;;;;;;;;;;;AAUA9G,KAAK,CAAC4H,WAAN,GAAoB,UAAS1H,QAAT,EAAmB;AACrCR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAN,IAAI,CAACS,QAAL,CAAcL,KAAK,CAAC4H,WAApB,EAAiClI,IAAI,CAACS,OAAtC;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3BP,EAAAA,KAAK,CAAC4H,WAAN,CAAkBpH,WAAlB,GAAgC,mBAAhC;AACD;;AAGD,IAAId,IAAI,CAACS,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAT,EAAAA,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BC,QAA5B,GAAuC,UAASC,mBAAT,EAA8B;AACnE,WAAOZ,KAAK,CAAC4H,WAAN,CAAkBjH,QAAlB,CAA2BC,mBAA3B,EAAgD,IAAhD,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAZ,EAAAA,KAAK,CAAC4H,WAAN,CAAkBjH,QAAlB,GAA6B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC1D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,EAAE,EAAEvB,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CADO;AAEX+G,MAAAA,MAAM,EAAEnI,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFG;AAGXgH,MAAAA,OAAO,EAAEpI,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHE;AAIXY,MAAAA,IAAI,EAAEhC,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAJK;AAKXS,MAAAA,UAAU,EAAE7B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CALD;AAMXU,MAAAA,UAAU,EAAE9B,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AAND,KAAb;;AASA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACgB,oBAAJ,GAA2BlB,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAdD;AAeC;AAGD;;;;;;;AAKAhB,KAAK,CAAC4H,WAAN,CAAkB3F,iBAAlB,GAAsC,UAASC,KAAT,EAAgB;AACpD,MAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIpB,GAAG,GAAG,IAAId,KAAK,CAAC4H,WAAV,EAAV;AACA,SAAO5H,KAAK,CAAC4H,WAAN,CAAkBvF,2BAAlB,CAA8CvB,GAA9C,EAAmDqB,MAAnD,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAnC,KAAK,CAAC4H,WAAN,CAAkBvF,2BAAlB,GAAgD,UAASvB,GAAT,EAAcqB,MAAd,EAAsB;AACpE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAAC8B,KAAJ,CAAUF,KAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAACiH,SAAJ,CAAcrF,KAAd;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACkH,UAAJ,CAAetF,KAAf;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACuC,OAAJ,CAAYX,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACoC,aAAJ,CAAkBR,KAAlB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACAhC,QAAAA,GAAG,CAACqC,aAAJ,CAAkBT,KAAlB;AACA;;AACF;AACEP,QAAAA,MAAM,CAACuB,SAAP;AACA;AA3BF;AA6BD;;AACD,SAAO5C,GAAP;AACD,CArCD;AAwCA;;;;;;AAIAd,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BiD,eAA5B,GAA8C,YAAW;AACvD,MAAIC,MAAM,GAAG,IAAIlE,IAAI,CAACmE,YAAT,EAAb;AACA7D,EAAAA,KAAK,CAAC4H,WAAN,CAAkB9D,uBAAlB,CAA0C,IAA1C,EAAgDF,MAAhD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/D,KAAK,CAAC4H,WAAN,CAAkB9D,uBAAlB,GAA4C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACpE,MAAI7C,CAAC,GAAGkD,SAAR;AACAlD,EAAAA,CAAC,GAAGiD,OAAO,CAACE,KAAR,EAAJ;;AACA,MAAInD,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACiE,SAAR,EAAJ;;AACA,MAAIlH,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACkE,UAAR,EAAJ;;AACA,MAAInH,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACa,OAAR,EAAJ;;AACA,MAAI9D,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACU,aAAR,EAAJ;;AACA,MAAI3D,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiD,OAAO,CAACW,aAAR,EAAJ;;AACA,MAAI5D,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEExD,CAFF;AAID;AACF,CA5CD;AA+CA;;;;;;AAIAf,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BwD,KAA5B,GAAoC,YAAW;AAC7C;AAAO;AAAuBxE,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BkC,KAA5B,GAAoC,UAASF,KAAT,EAAgB;AAClDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BuH,SAA5B,GAAwC,YAAW;AACjD;AAAO;AAAuBvI,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BqH,SAA5B,GAAwC,UAASrF,KAAT,EAAgB;AACtDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BwH,UAA5B,GAAyC,YAAW;AAClD;AAAO;AAAuBxI,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BsH,UAA5B,GAAyC,UAAStF,KAAT,EAAgB;AACvDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BmE,OAA5B,GAAsC,YAAW;AAC/C;AAAO;AAAuBnF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4B2C,OAA5B,GAAsC,UAASX,KAAT,EAAgB;AACpDhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BgE,aAA5B,GAA4C,YAAW;AACrD;AAAO;AAAuBhF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BwC,aAA5B,GAA4C,UAASR,KAAT,EAAgB;AAC1DhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAKA;;;;;;AAIA1C,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4BiE,aAA5B,GAA4C,YAAW;AACrD;AAAO;AAAuBjF,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAAC4H,WAAN,CAAkBlH,SAAlB,CAA4ByC,aAA5B,GAA4C,UAAST,KAAT,EAAgB;AAC1DhD,EAAAA,IAAI,CAACS,OAAL,CAAa8E,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CvC,KAA3C;AACD,CAFD;AAMA;;;;;;;;;;;;AAUA1C,KAAK,CAACmI,YAAN,GAAqB,UAASjI,QAAT,EAAmB;AACtCR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CF,KAAK,CAACmI,YAAN,CAAmBrC,eAAlE,EAAmF,IAAnF;AACD,CAFD;;AAGAlG,IAAI,CAACS,QAAL,CAAcL,KAAK,CAACmI,YAApB,EAAkCzI,IAAI,CAACS,OAAvC;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3BP,EAAAA,KAAK,CAACmI,YAAN,CAAmB3H,WAAnB,GAAiC,oBAAjC;AACD;AACD;;;;;;;AAKAR,KAAK,CAACmI,YAAN,CAAmBrC,eAAnB,GAAqC,CAAC,CAAD,CAArC;;AAIA,IAAIpG,IAAI,CAACS,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAT,EAAAA,KAAK,CAACmI,YAAN,CAAmBzH,SAAnB,CAA6BC,QAA7B,GAAwC,UAASC,mBAAT,EAA8B;AACpE,WAAOZ,KAAK,CAACmI,YAAN,CAAmBxH,QAAnB,CAA4BC,mBAA5B,EAAiD,IAAjD,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAZ,EAAAA,KAAK,CAACmI,YAAN,CAAmBxH,QAAnB,GAA8B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC3D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX+E,MAAAA,QAAQ,EAAErG,IAAI,CAACS,OAAL,CAAa6F,YAAb,CAA0BlF,GAAG,CAACmF,WAAJ,EAA1B,EACVjG,KAAK,CAAC4H,WAAN,CAAkBjH,QADR,EACkBE,eADlB,CADC;AAGXuF,MAAAA,KAAK,EAAE1G,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AAHI,KAAb;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACgB,oBAAJ,GAA2BlB,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;AAGD;;;;;;;AAKAhB,KAAK,CAACmI,YAAN,CAAmBlG,iBAAnB,GAAuC,UAASC,KAAT,EAAgB;AACrD,MAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIpB,GAAG,GAAG,IAAId,KAAK,CAACmI,YAAV,EAAV;AACA,SAAOnI,KAAK,CAACmI,YAAN,CAAmB9F,2BAAnB,CAA+CvB,GAA/C,EAAoDqB,MAApD,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAnC,KAAK,CAACmI,YAAN,CAAmB9F,2BAAnB,GAAiD,UAASvB,GAAT,EAAcqB,MAAd,EAAsB;AACrE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI1C,KAAK,CAAC4H,WAAV,EAAZ;AACAzF,QAAAA,MAAM,CAACoB,WAAP,CAAmBb,KAAnB,EAAyB1C,KAAK,CAAC4H,WAAN,CAAkBvF,2BAA3C;AACAvB,QAAAA,GAAG,CAACuF,OAAJ,CAAY3D,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,SAAP,EAAnC;AACA7B,QAAAA,GAAG,CAAC0F,QAAJ,CAAa9D,KAAb;AACA;;AACF;AACEP,QAAAA,MAAM,CAACuB,SAAP;AACA;AAZF;AAcD;;AACD,SAAO5C,GAAP;AACD,CAtBD;AAyBA;;;;;;AAIAd,KAAK,CAACmI,YAAN,CAAmBzH,SAAnB,CAA6BiD,eAA7B,GAA+C,YAAW;AACxD,MAAIC,MAAM,GAAG,IAAIlE,IAAI,CAACmE,YAAT,EAAb;AACA7D,EAAAA,KAAK,CAACmI,YAAN,CAAmBrE,uBAAnB,CAA2C,IAA3C,EAAiDF,MAAjD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/D,KAAK,CAACmI,YAAN,CAAmBrE,uBAAnB,GAA6C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACrE,MAAI7C,CAAC,GAAGkD,SAAR;AACAlD,EAAAA,CAAC,GAAGiD,OAAO,CAACiC,WAAR,EAAJ;;AACA,MAAIlF,CAAC,CAACuD,MAAF,GAAW,CAAf,EAAkB;AAChBV,IAAAA,MAAM,CAAC6C,oBAAP,CACE,CADF,EAEE1F,CAFF,EAGEf,KAAK,CAAC4H,WAAN,CAAkB9D,uBAHpB;AAKD;;AACD/C,EAAAA,CAAC,GAAGiD,OAAO,CAAC4C,QAAR,EAAJ;;AACA,MAAI7F,CAAC,KAAK,CAAV,EAAa;AACX6C,IAAAA,MAAM,CAACO,UAAP,CACE,CADF,EAEEpD,CAFF;AAID;AACF,CAjBD;AAoBA;;;;;;AAIAf,KAAK,CAACmI,YAAN,CAAmBzH,SAAnB,CAA6BuF,WAA7B,GAA2C,YAAW;AACpD;AAAO;AACLvG,IAAAA,IAAI,CAACS,OAAL,CAAa0G,uBAAb,CAAqC,IAArC,EAA2C7G,KAAK,CAAC4H,WAAjD,EAA8D,CAA9D;AADF;AAED,CAHD;AAMA;;;AACA5H,KAAK,CAACmI,YAAN,CAAmBzH,SAAnB,CAA6BoG,WAA7B,GAA2C,UAASpE,KAAT,EAAgB;AACzDhD,EAAAA,IAAI,CAACS,OAAL,CAAa4G,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8CrE,KAA9C;AACD,CAFD;AAKA;;;;;;;AAKA1C,KAAK,CAACmI,YAAN,CAAmBzH,SAAnB,CAA6B2F,OAA7B,GAAuC,UAASW,SAAT,EAAoBC,SAApB,EAA+B;AACpE,SAAOvH,IAAI,CAACS,OAAL,CAAa+G,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDF,SAAhD,EAA2DhH,KAAK,CAAC4H,WAAjE,EAA8EX,SAA9E,CAAP;AACD,CAFD;;AAKAjH,KAAK,CAACmI,YAAN,CAAmBzH,SAAnB,CAA6ByG,aAA7B,GAA6C,YAAW;AACtD,OAAKL,WAAL,CAAiB,EAAjB;AACD,CAFD;AAKA;;;;;;AAIA9G,KAAK,CAACmI,YAAN,CAAmBzH,SAAnB,CAA6BkG,QAA7B,GAAwC,YAAW;AACjD;AAAO;AAAuBlH,IAAAA,IAAI,CAACS,OAAL,CAAae,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;AACAlB,KAAK,CAACmI,YAAN,CAAmBzH,SAAnB,CAA6B8F,QAA7B,GAAwC,UAAS9D,KAAT,EAAgB;AACtDhD,EAAAA,IAAI,CAACS,OAAL,CAAa6E,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCtC,KAAxC;AACD,CAFD;;AAKA9C,IAAI,CAACwI,MAAL,CAAYC,MAAZ,CAAmBC,OAAnB,EAA4BtI,KAA5B","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.blogComment', null, global);\ngoog.exportSymbol('proto.blogComments', null, global);\ngoog.exportSymbol('proto.blogListRes', null, global);\ngoog.exportSymbol('proto.detailRes', null, global);\ngoog.exportSymbol('proto.fileReadRes', null, global);\ngoog.exportSymbol('proto.tp', null, global);\ngoog.exportSymbol('proto.tps', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.detailRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.detailRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.detailRes.displayName = 'proto.detailRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.detailRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.detailRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.detailRes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.detailRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    view: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    preface: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    htmlTxtUrl: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    recommended: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    createTime: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    updateTime: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    name: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    goodNum: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    next: (f = msg.getNext()) && proto.detailRes.toObject(includeInstance, f),\n    prev: (f = msg.getPrev()) && proto.detailRes.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.detailRes}\n */\nproto.detailRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.detailRes;\n  return proto.detailRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.detailRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.detailRes}\n */\nproto.detailRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setView(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreface(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHtmlTxtUrl(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setRecommended(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreateTime(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdateTime(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setType(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setGoodNum(value);\n      break;\n    case 11:\n      var value = new proto.detailRes;\n      reader.readMessage(value,proto.detailRes.deserializeBinaryFromReader);\n      msg.setNext(value);\n      break;\n    case 12:\n      var value = new proto.detailRes;\n      reader.readMessage(value,proto.detailRes.deserializeBinaryFromReader);\n      msg.setPrev(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.detailRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.detailRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.detailRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.detailRes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getView();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPreface();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getHtmlTxtUrl();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getRecommended();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getUpdateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getGoodNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      10,\n      f\n    );\n  }\n  f = message.getNext();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      proto.detailRes.serializeBinaryToWriter\n    );\n  }\n  f = message.getPrev();\n  if (f != null) {\n    writer.writeMessage(\n      12,\n      f,\n      proto.detailRes.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.detailRes.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 view = 2;\n * @return {number}\n */\nproto.detailRes.prototype.getView = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setView = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string preface = 3;\n * @return {string}\n */\nproto.detailRes.prototype.getPreface = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setPreface = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string html_txt_url = 4;\n * @return {string}\n */\nproto.detailRes.prototype.getHtmlTxtUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setHtmlTxtUrl = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int32 recommended = 5;\n * @return {number}\n */\nproto.detailRes.prototype.getRecommended = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setRecommended = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional string create_time = 6;\n * @return {string}\n */\nproto.detailRes.prototype.getCreateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setCreateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string update_time = 7;\n * @return {string}\n */\nproto.detailRes.prototype.getUpdateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setUpdateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional int32 type = 8;\n * @return {number}\n */\nproto.detailRes.prototype.getType = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setType = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional string name = 9;\n * @return {string}\n */\nproto.detailRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n\n\n/**\n * optional int32 good_num = 10;\n * @return {number}\n */\nproto.detailRes.prototype.getGoodNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setGoodNum = function(value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional detailRes next = 11;\n * @return {?proto.detailRes}\n */\nproto.detailRes.prototype.getNext = function() {\n  return /** @type{?proto.detailRes} */ (\n    jspb.Message.getWrapperField(this, proto.detailRes, 11));\n};\n\n\n/** @param {?proto.detailRes|undefined} value */\nproto.detailRes.prototype.setNext = function(value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n\n\nproto.detailRes.prototype.clearNext = function() {\n  this.setNext(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.detailRes.prototype.hasNext = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional detailRes prev = 12;\n * @return {?proto.detailRes}\n */\nproto.detailRes.prototype.getPrev = function() {\n  return /** @type{?proto.detailRes} */ (\n    jspb.Message.getWrapperField(this, proto.detailRes, 12));\n};\n\n\n/** @param {?proto.detailRes|undefined} value */\nproto.detailRes.prototype.setPrev = function(value) {\n  jspb.Message.setWrapperField(this, 12, value);\n};\n\n\nproto.detailRes.prototype.clearPrev = function() {\n  this.setPrev(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.detailRes.prototype.hasPrev = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.fileReadRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.fileReadRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.fileReadRes.displayName = 'proto.fileReadRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.fileReadRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.fileReadRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.fileReadRes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.fileReadRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txt: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.fileReadRes}\n */\nproto.fileReadRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.fileReadRes;\n  return proto.fileReadRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.fileReadRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.fileReadRes}\n */\nproto.fileReadRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.fileReadRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.fileReadRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.fileReadRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.fileReadRes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxt();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string txt = 1;\n * @return {string}\n */\nproto.fileReadRes.prototype.getTxt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.fileReadRes.prototype.setTxt = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.blogListRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.blogListRes.repeatedFields_, null);\n};\ngoog.inherits(proto.blogListRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.blogListRes.displayName = 'proto.blogListRes';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.blogListRes.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.blogListRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.blogListRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.blogListRes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogListRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: jspb.Message.toObjectList(msg.getListList(),\n    proto.detailRes.toObject, includeInstance),\n    page: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    size: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    total: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogListRes}\n */\nproto.blogListRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogListRes;\n  return proto.blogListRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogListRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogListRes}\n */\nproto.blogListRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.detailRes;\n      reader.readMessage(value,proto.detailRes.deserializeBinaryFromReader);\n      msg.addList(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPage(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSize(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTotal(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.blogListRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.blogListRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogListRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogListRes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.detailRes.serializeBinaryToWriter\n    );\n  }\n  f = message.getPage();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getTotal();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated detailRes list = 1;\n * @return {!Array.<!proto.detailRes>}\n */\nproto.blogListRes.prototype.getListList = function() {\n  return /** @type{!Array.<!proto.detailRes>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.detailRes, 1));\n};\n\n\n/** @param {!Array.<!proto.detailRes>} value */\nproto.blogListRes.prototype.setListList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.detailRes=} opt_value\n * @param {number=} opt_index\n * @return {!proto.detailRes}\n */\nproto.blogListRes.prototype.addList = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.detailRes, opt_index);\n};\n\n\nproto.blogListRes.prototype.clearListList = function() {\n  this.setListList([]);\n};\n\n\n/**\n * optional int32 page = 2;\n * @return {number}\n */\nproto.blogListRes.prototype.getPage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.blogListRes.prototype.setPage = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 size = 3;\n * @return {number}\n */\nproto.blogListRes.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.blogListRes.prototype.setSize = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 total = 4;\n * @return {number}\n */\nproto.blogListRes.prototype.getTotal = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.blogListRes.prototype.setTotal = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tp = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tp, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tp.displayName = 'proto.tp';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tp.prototype.toObject = function(opt_includeInstance) {\n  return proto.tp.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tp} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tp.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    lable: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    createTime: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    updateTime: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    blogNum: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tp}\n */\nproto.tp.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tp;\n  return proto.tp.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tp} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tp}\n */\nproto.tp.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLable(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreateTime(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdateTime(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlogNum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tp.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tp.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tp} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tp.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLable();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getUpdateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getBlogNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.tp.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.tp.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string lable = 2;\n * @return {string}\n */\nproto.tp.prototype.getLable = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.tp.prototype.setLable = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string create_time = 3;\n * @return {string}\n */\nproto.tp.prototype.getCreateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.tp.prototype.setCreateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string update_time = 4;\n * @return {string}\n */\nproto.tp.prototype.getUpdateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.tp.prototype.setUpdateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int32 blog_num = 5;\n * @return {number}\n */\nproto.tp.prototype.getBlogNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.tp.prototype.setBlogNum = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tps = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tps.repeatedFields_, null);\n};\ngoog.inherits(proto.tps, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tps.displayName = 'proto.tps';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tps.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tps.prototype.toObject = function(opt_includeInstance) {\n  return proto.tps.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tps} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tps.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: jspb.Message.toObjectList(msg.getListList(),\n    proto.tp.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tps}\n */\nproto.tps.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tps;\n  return proto.tps.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tps} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tps}\n */\nproto.tps.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tp;\n      reader.readMessage(value,proto.tp.deserializeBinaryFromReader);\n      msg.addList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tps.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tps.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tps} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tps.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.tp.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated tp list = 1;\n * @return {!Array.<!proto.tp>}\n */\nproto.tps.prototype.getListList = function() {\n  return /** @type{!Array.<!proto.tp>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tp, 1));\n};\n\n\n/** @param {!Array.<!proto.tp>} value */\nproto.tps.prototype.setListList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.tp=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tp}\n */\nproto.tps.prototype.addList = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tp, opt_index);\n};\n\n\nproto.tps.prototype.clearListList = function() {\n  this.setListList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.blogComment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.blogComment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.blogComment.displayName = 'proto.blogComment';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.blogComment.prototype.toObject = function(opt_includeInstance) {\n  return proto.blogComment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.blogComment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogComment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    blogId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    content: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    createTime: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updateTime: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogComment}\n */\nproto.blogComment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogComment;\n  return proto.blogComment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogComment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogComment}\n */\nproto.blogComment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlogId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContent(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreateTime(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdateTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.blogComment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.blogComment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogComment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogComment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getBlogId();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getContent();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.blogComment.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.blogComment.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 blog_id = 2;\n * @return {number}\n */\nproto.blogComment.prototype.getBlogId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.blogComment.prototype.setBlogId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string content = 3;\n * @return {string}\n */\nproto.blogComment.prototype.getContent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.blogComment.prototype.setContent = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string name = 4;\n * @return {string}\n */\nproto.blogComment.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.blogComment.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string create_time = 5;\n * @return {string}\n */\nproto.blogComment.prototype.getCreateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.blogComment.prototype.setCreateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string update_time = 6;\n * @return {string}\n */\nproto.blogComment.prototype.getUpdateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.blogComment.prototype.setUpdateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.blogComments = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.blogComments.repeatedFields_, null);\n};\ngoog.inherits(proto.blogComments, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.blogComments.displayName = 'proto.blogComments';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.blogComments.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.blogComments.prototype.toObject = function(opt_includeInstance) {\n  return proto.blogComments.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.blogComments} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogComments.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: jspb.Message.toObjectList(msg.getListList(),\n    proto.blogComment.toObject, includeInstance),\n    total: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogComments}\n */\nproto.blogComments.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogComments;\n  return proto.blogComments.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogComments} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogComments}\n */\nproto.blogComments.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.blogComment;\n      reader.readMessage(value,proto.blogComment.deserializeBinaryFromReader);\n      msg.addList(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTotal(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.blogComments.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.blogComments.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogComments} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogComments.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.blogComment.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotal();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated blogComment list = 1;\n * @return {!Array.<!proto.blogComment>}\n */\nproto.blogComments.prototype.getListList = function() {\n  return /** @type{!Array.<!proto.blogComment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.blogComment, 1));\n};\n\n\n/** @param {!Array.<!proto.blogComment>} value */\nproto.blogComments.prototype.setListList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.blogComment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.blogComment}\n */\nproto.blogComments.prototype.addList = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blogComment, opt_index);\n};\n\n\nproto.blogComments.prototype.clearListList = function() {\n  this.setListList([]);\n};\n\n\n/**\n * optional int32 total = 2;\n * @return {number}\n */\nproto.blogComments.prototype.getTotal = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.blogComments.prototype.setTotal = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"module"}