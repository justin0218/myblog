{"version":3,"file":"static/webpack/static/development/pages/me.js.9b62c75f7ba91c4e4471.hot-update.js","sources":["webpack:///./proto/blog_pb.js"],"sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.blogComment', null, global);\ngoog.exportSymbol('proto.blogComments', null, global);\ngoog.exportSymbol('proto.blogListRes', null, global);\ngoog.exportSymbol('proto.detailRes', null, global);\ngoog.exportSymbol('proto.fileReadRes', null, global);\ngoog.exportSymbol('proto.tp', null, global);\ngoog.exportSymbol('proto.tps', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.detailRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.detailRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.detailRes.displayName = 'proto.detailRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.detailRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.detailRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.detailRes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.detailRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    view: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    preface: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    htmlTxtUrl: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    recommended: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    createTime: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    updateTime: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    name: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    goodNum: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    next: (f = msg.getNext()) && proto.detailRes.toObject(includeInstance, f),\n    prev: (f = msg.getPrev()) && proto.detailRes.toObject(includeInstance, f),\n    cover: jspb.Message.getFieldWithDefault(msg, 13, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.detailRes}\n */\nproto.detailRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.detailRes;\n  return proto.detailRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.detailRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.detailRes}\n */\nproto.detailRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setView(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreface(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHtmlTxtUrl(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setRecommended(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreateTime(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdateTime(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setType(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setGoodNum(value);\n      break;\n    case 11:\n      var value = new proto.detailRes;\n      reader.readMessage(value,proto.detailRes.deserializeBinaryFromReader);\n      msg.setNext(value);\n      break;\n    case 12:\n      var value = new proto.detailRes;\n      reader.readMessage(value,proto.detailRes.deserializeBinaryFromReader);\n      msg.setPrev(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCover(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.detailRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.detailRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.detailRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.detailRes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getView();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPreface();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getHtmlTxtUrl();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getRecommended();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getUpdateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getGoodNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      10,\n      f\n    );\n  }\n  f = message.getNext();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      proto.detailRes.serializeBinaryToWriter\n    );\n  }\n  f = message.getPrev();\n  if (f != null) {\n    writer.writeMessage(\n      12,\n      f,\n      proto.detailRes.serializeBinaryToWriter\n    );\n  }\n  f = message.getCover();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.detailRes.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 view = 2;\n * @return {number}\n */\nproto.detailRes.prototype.getView = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setView = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string preface = 3;\n * @return {string}\n */\nproto.detailRes.prototype.getPreface = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setPreface = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string html_txt_url = 4;\n * @return {string}\n */\nproto.detailRes.prototype.getHtmlTxtUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setHtmlTxtUrl = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int32 recommended = 5;\n * @return {number}\n */\nproto.detailRes.prototype.getRecommended = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setRecommended = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional string create_time = 6;\n * @return {string}\n */\nproto.detailRes.prototype.getCreateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setCreateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string update_time = 7;\n * @return {string}\n */\nproto.detailRes.prototype.getUpdateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setUpdateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional int32 type = 8;\n * @return {number}\n */\nproto.detailRes.prototype.getType = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setType = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional string name = 9;\n * @return {string}\n */\nproto.detailRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n\n\n/**\n * optional int32 good_num = 10;\n * @return {number}\n */\nproto.detailRes.prototype.getGoodNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.detailRes.prototype.setGoodNum = function(value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional detailRes next = 11;\n * @return {?proto.detailRes}\n */\nproto.detailRes.prototype.getNext = function() {\n  return /** @type{?proto.detailRes} */ (\n    jspb.Message.getWrapperField(this, proto.detailRes, 11));\n};\n\n\n/** @param {?proto.detailRes|undefined} value */\nproto.detailRes.prototype.setNext = function(value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n\n\nproto.detailRes.prototype.clearNext = function() {\n  this.setNext(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.detailRes.prototype.hasNext = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional detailRes prev = 12;\n * @return {?proto.detailRes}\n */\nproto.detailRes.prototype.getPrev = function() {\n  return /** @type{?proto.detailRes} */ (\n    jspb.Message.getWrapperField(this, proto.detailRes, 12));\n};\n\n\n/** @param {?proto.detailRes|undefined} value */\nproto.detailRes.prototype.setPrev = function(value) {\n  jspb.Message.setWrapperField(this, 12, value);\n};\n\n\nproto.detailRes.prototype.clearPrev = function() {\n  this.setPrev(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.detailRes.prototype.hasPrev = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional string cover = 13;\n * @return {string}\n */\nproto.detailRes.prototype.getCover = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/** @param {string} value */\nproto.detailRes.prototype.setCover = function(value) {\n  jspb.Message.setProto3StringField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.fileReadRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.fileReadRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.fileReadRes.displayName = 'proto.fileReadRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.fileReadRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.fileReadRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.fileReadRes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.fileReadRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txt: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.fileReadRes}\n */\nproto.fileReadRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.fileReadRes;\n  return proto.fileReadRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.fileReadRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.fileReadRes}\n */\nproto.fileReadRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.fileReadRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.fileReadRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.fileReadRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.fileReadRes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxt();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string txt = 1;\n * @return {string}\n */\nproto.fileReadRes.prototype.getTxt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.fileReadRes.prototype.setTxt = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.blogListRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.blogListRes.repeatedFields_, null);\n};\ngoog.inherits(proto.blogListRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.blogListRes.displayName = 'proto.blogListRes';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.blogListRes.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.blogListRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.blogListRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.blogListRes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogListRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: jspb.Message.toObjectList(msg.getListList(),\n    proto.detailRes.toObject, includeInstance),\n    page: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    size: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    total: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogListRes}\n */\nproto.blogListRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogListRes;\n  return proto.blogListRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogListRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogListRes}\n */\nproto.blogListRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.detailRes;\n      reader.readMessage(value,proto.detailRes.deserializeBinaryFromReader);\n      msg.addList(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPage(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSize(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTotal(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.blogListRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.blogListRes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogListRes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogListRes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.detailRes.serializeBinaryToWriter\n    );\n  }\n  f = message.getPage();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getTotal();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated detailRes list = 1;\n * @return {!Array.<!proto.detailRes>}\n */\nproto.blogListRes.prototype.getListList = function() {\n  return /** @type{!Array.<!proto.detailRes>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.detailRes, 1));\n};\n\n\n/** @param {!Array.<!proto.detailRes>} value */\nproto.blogListRes.prototype.setListList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.detailRes=} opt_value\n * @param {number=} opt_index\n * @return {!proto.detailRes}\n */\nproto.blogListRes.prototype.addList = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.detailRes, opt_index);\n};\n\n\nproto.blogListRes.prototype.clearListList = function() {\n  this.setListList([]);\n};\n\n\n/**\n * optional int32 page = 2;\n * @return {number}\n */\nproto.blogListRes.prototype.getPage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.blogListRes.prototype.setPage = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 size = 3;\n * @return {number}\n */\nproto.blogListRes.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.blogListRes.prototype.setSize = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 total = 4;\n * @return {number}\n */\nproto.blogListRes.prototype.getTotal = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.blogListRes.prototype.setTotal = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tp = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tp, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tp.displayName = 'proto.tp';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tp.prototype.toObject = function(opt_includeInstance) {\n  return proto.tp.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tp} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tp.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    lable: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    createTime: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    updateTime: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    blogNum: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tp}\n */\nproto.tp.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tp;\n  return proto.tp.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tp} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tp}\n */\nproto.tp.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLable(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreateTime(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdateTime(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlogNum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tp.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tp.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tp} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tp.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLable();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getUpdateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getBlogNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.tp.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.tp.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string lable = 2;\n * @return {string}\n */\nproto.tp.prototype.getLable = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.tp.prototype.setLable = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string create_time = 3;\n * @return {string}\n */\nproto.tp.prototype.getCreateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.tp.prototype.setCreateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string update_time = 4;\n * @return {string}\n */\nproto.tp.prototype.getUpdateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.tp.prototype.setUpdateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int32 blog_num = 5;\n * @return {number}\n */\nproto.tp.prototype.getBlogNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.tp.prototype.setBlogNum = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tps = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tps.repeatedFields_, null);\n};\ngoog.inherits(proto.tps, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tps.displayName = 'proto.tps';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tps.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tps.prototype.toObject = function(opt_includeInstance) {\n  return proto.tps.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tps} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tps.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: jspb.Message.toObjectList(msg.getListList(),\n    proto.tp.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tps}\n */\nproto.tps.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tps;\n  return proto.tps.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tps} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tps}\n */\nproto.tps.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tp;\n      reader.readMessage(value,proto.tp.deserializeBinaryFromReader);\n      msg.addList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tps.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tps.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tps} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tps.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.tp.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated tp list = 1;\n * @return {!Array.<!proto.tp>}\n */\nproto.tps.prototype.getListList = function() {\n  return /** @type{!Array.<!proto.tp>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tp, 1));\n};\n\n\n/** @param {!Array.<!proto.tp>} value */\nproto.tps.prototype.setListList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.tp=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tp}\n */\nproto.tps.prototype.addList = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tp, opt_index);\n};\n\n\nproto.tps.prototype.clearListList = function() {\n  this.setListList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.blogComment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.blogComment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.blogComment.displayName = 'proto.blogComment';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.blogComment.prototype.toObject = function(opt_includeInstance) {\n  return proto.blogComment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.blogComment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogComment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    blogId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    content: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    createTime: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updateTime: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogComment}\n */\nproto.blogComment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogComment;\n  return proto.blogComment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogComment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogComment}\n */\nproto.blogComment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlogId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContent(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreateTime(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdateTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.blogComment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.blogComment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogComment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogComment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getBlogId();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getContent();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdateTime();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.blogComment.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.blogComment.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 blog_id = 2;\n * @return {number}\n */\nproto.blogComment.prototype.getBlogId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.blogComment.prototype.setBlogId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string content = 3;\n * @return {string}\n */\nproto.blogComment.prototype.getContent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.blogComment.prototype.setContent = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string name = 4;\n * @return {string}\n */\nproto.blogComment.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.blogComment.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string create_time = 5;\n * @return {string}\n */\nproto.blogComment.prototype.getCreateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.blogComment.prototype.setCreateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string update_time = 6;\n * @return {string}\n */\nproto.blogComment.prototype.getUpdateTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.blogComment.prototype.setUpdateTime = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.blogComments = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.blogComments.repeatedFields_, null);\n};\ngoog.inherits(proto.blogComments, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.blogComments.displayName = 'proto.blogComments';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.blogComments.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.blogComments.prototype.toObject = function(opt_includeInstance) {\n  return proto.blogComments.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.blogComments} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogComments.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: jspb.Message.toObjectList(msg.getListList(),\n    proto.blogComment.toObject, includeInstance),\n    total: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.blogComments}\n */\nproto.blogComments.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.blogComments;\n  return proto.blogComments.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.blogComments} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.blogComments}\n */\nproto.blogComments.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.blogComment;\n      reader.readMessage(value,proto.blogComment.deserializeBinaryFromReader);\n      msg.addList(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTotal(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.blogComments.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.blogComments.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.blogComments} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.blogComments.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.blogComment.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotal();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated blogComment list = 1;\n * @return {!Array.<!proto.blogComment>}\n */\nproto.blogComments.prototype.getListList = function() {\n  return /** @type{!Array.<!proto.blogComment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.blogComment, 1));\n};\n\n\n/** @param {!Array.<!proto.blogComment>} value */\nproto.blogComments.prototype.setListList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.blogComment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.blogComment}\n */\nproto.blogComments.prototype.addList = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blogComment, opt_index);\n};\n\n\nproto.blogComments.prototype.clearListList = function() {\n  this.setListList([]);\n};\n\n\n/**\n * optional int32 total = 2;\n * @return {number}\n */\nproto.blogComments.prototype.getTotal = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.blogComments.prototype.setTotal = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"],"mappings":";;;;;;;;;AAAA;;;;;;;AAOA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;AAUA;AACA;AACA;AAGA;;;;;;;;;;;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAzDA;AA2DA;AACA;AAAA;AACA;AAGA;;;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AACA;AADA;AAEA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AACA;AADA;AAEA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAIA;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;AAUA;AACA;AACA;AAGA;;;;;;;;;;;AASA;AACA;AAAA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;AASA;AACA;AAAA;AACA;AAGA;;;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAIA;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AAGA;AACA;;;;;;;;;;AAUA;AACA;AACA;AAGA;;;;;;;;;;;AASA;AACA;AAAA;AACA;AAEA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AApBA;AAsBA;AACA;AAAA;AACA;AAGA;;;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AACA;AADA;AAEA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAIA;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;AAUA;AACA;AACA;AAGA;;;;;;;;;;;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAvBA;AAyBA;AACA;AAAA;AACA;AAGA;;;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAIA;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AAGA;AACA;;;;;;;;;;AAUA;AACA;AACA;AAGA;;;;;;;;;;;AASA;AACA;AAAA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AAGA;;;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AACA;AADA;AAEA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;AAUA;AACA;AACA;AAGA;;;;;;;;;;;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AA3BA;AA6BA;AACA;AAAA;AACA;AAGA;;;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAIA;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AAGA;AACA;;;;;;;;;;AAUA;AACA;AACA;AAGA;;;;;;;;;;;AASA;AACA;AAAA;AACA;AAEA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAZA;AAcA;AACA;AAAA;AACA;AAGA;;;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AACA;AADA;AAEA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;;;;;;;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}